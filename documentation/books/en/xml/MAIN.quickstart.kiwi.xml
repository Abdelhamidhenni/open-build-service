<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC 
  "-//OASIS//DTD DocBook XML V4.4//EN"
  "http://www.docbook.org/xml/4.4/docbookx.dtd"
[
  <!-- Support xi:include elements -->
  <!ENTITY % xinclude SYSTEM "xinclude.mod">
  %xinclude;

  <!--<!ENTITY % local.common.attrib "%xmlnsxi;">-->
  <!ENTITY % local.chapter.class "| xi:include">
  <!ENTITY % local.section.class "| xi:include">
  <!ENTITY % local.info.class "|xi:include">

]>
<article lang="en" revision="draft" class="whitepaper">
  <title>KIWI Quick Start</title>
  <articleinfo>
    <authorgroup>
      <author>
        <firstname>Marcus</firstname>
        <surname>Schäfer</surname>
        <contrib>Developer</contrib>
      </author>
      <author>
        <firstname>Thomas</firstname>
        <surname>Schraitle</surname>
        <contrib>Documentation</contrib>
      </author>
    </authorgroup>
    <keywordset>
      <keyword>KIWI</keyword>
      <keyword>KIWI Image System</keyword>
      <keyword>config.xml</keyword>
      <keyword>Live DVD</keyword>
      <keyword>Live CD</keyword>
    </keywordset>
    <pubdate>Created: <?dbtimestamp?></pubdate>
    <releaseinfo
 >$Id$</releaseinfo>
  </articleinfo>
  <sect1 id="sec.kiwi.whatis">
    <title>What is KIWI?</title>
    <para>KIWI is a system for creating operating system images. An
      image represents in one file the operating system, its
      applications and configurations as well as the filesystem
      structure of the OS, with possible additional metadata. Depending
      on the image type also disk geometry and partition table data can
      be part of the image. The image needs to be deployed at the
      destination system in order to get activated. <xref
        linkend="fig.kiwi.image-types" xrefstyle="select:label"/> shows
      you the general procedure what can be done with KIWI.</para>
    <figure id="fig.kiwi.image-types" >
      <title>KIWI Image Types</title>
      <mediaobject>
        <imageobject role="fo">
          <imagedata align="center" width="90%" fileref="kiwi-types.svg"/>
        </imageobject>
        <imageobject role="html">
          <imagedata align="center" width="90%" fileref="kiwi-types.png"/>
        </imageobject>        
      </mediaobject>
    </figure>

    <para>KIWI provides the following advantages: </para>
    <itemizedlist>
      <listitem>
        <para>Create your own Live CD/DVD which contains only those
          packages that you really need.
        </para>
      </listitem>
      <listitem>
        <para>Debug a new distribution by creating all necessary
          packages.</para>
      </listitem>
      <listitem>
        <para>Build your own installable ISO images to customize
          available packages, patterns, services, etc.</para>
      </listitem>
      <listitem>
        <para>Test new hardware with a predefinied image.</para>
      </listitem>
      <listitem>
        <remark>man kann mit kiwi images bauen die eigene nicht
          distributierte software enthalten</remark>
        <para>Create KIWI images which contains software that is not
          included in the official distribution.</para>
      </listitem>
      <listitem>
        <remark>man kann mit kiwi images bauen die direkt in
          Virtualisierungssystemen wie zB VMware oder Xen benutzt werden
          können. KIWI generiert auch die dafür notwendige guest
          Konfigurationsdatei</remark>
        <para>Build KIWI image that can be directly used by
          virtualisation systems like Xen or VMware.</para>
      </listitem>
      <listitem>
        <remark>man kann mit einer kiwi image Beschreibung leicht auf
          eine andere Architektur wechseln indem man das image mit einer
          für die Architektur angepasstes repo baut</remark>
        <para>Generate KIWI images for different processor architectures
          only by switching to a different repository.</para>
      </listitem>
      <listitem>
        <remark>man kann mit kiwi kleinere images bauen als es mit einer
          normalen Installation möglich ist. Bedingt durch mögliche
          Kompression und Einflussnahme ausserhalb des Paketmanagers.</remark>
        <para>Create smaller images than with a normal installation.</para>
      </listitem>
      <listitem>
        <remark>man kann mit kiwi images für Netzwerk Systeme erstellen.
          kiwi unterstützt einen auch im Aufbau der Infrastruktur (PXE)</remark>
        <para>Build images for network systems. KIWI supports you by
          establishing the infrastrucutre, for example PXE.</para>
      </listitem>
    </itemizedlist>
  </sect1>
  
  <sect1 id="sec.kiwi.background">
    <title>Background Information for <quote>Fruit Lovers</quote></title>
    <para>If you want to an installation on your system, you need to
      answer some questions, maybe partition your harddisc, configure
      your hardware and probably select your favorite software. All this
      has to be done before you can work with your system. After the
      installation is finished you need to customize your system to your
      needs. </para>
    <para>KIWI is different: It is a commandline toolkit where you
      define <emphasis>image types</emphasis> to create images. KIWI
      works with a directory containing a configuration file and maybe
      scripts that needs to be used to build such images. The directory
      is the important part, not only the configuration file. Either you
      create one directory yourself or you copy and modify an existing
      one. Both ways works. Usually you copy the directory and customize
      the contents of the KIWI configuration file in regard to your
      needs. You can create a stripped down image with only a minimal
      set of packages to very specialised images, for example XEN. </para>
    <para>With KIWI, there are created projects like KDE&nbsp;4.0 Live
      CD, KIWI Linux Terminal Server Project (kiwi-ltsp), and many more.</para>
  </sect1>
  
  <sect1 id="sec.kiwi.preparation">
    <title>What do I need?</title>
    <para>To build images with KIWI, you need the following
      preconditions:</para>
    <remark>FIXME: Add more preconditions?</remark>
    <orderedlist>
      <listitem>
        <para>Free space. The more the better.</para>
      </listitem>
      <listitem>
        <para>KIWI is split into several packages, targeted to different
          image types. In every case you need the base package,
          <package>kiwi</package>. Depending on your target image, you
          need the following additional packages:</para>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry>Installation media</entry>
                <entry>
                  <package>kiwi-desc-oemboot</package>,
                  <package>kiwi-desc-vmxboot</package>
                </entry>
              </row>
              <row>
                <entry>Virtualization</entry>
                <entry>
                  <package>kiwi-desc-vmxboot</package>,
                  <package>kiwi-desc-xenboot</package>
                </entry>
              </row>
              <row>
                <entry>USB sticks</entry>
                <entry>
                  <package>kiwi-desc-usbboot</package>
                </entry>
              </row>
              <row>
                <entry>Network client</entry>
                <entry>
                  <package>kiwi-desc-netboot</package>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </listitem>
      <listitem>
        <para>Recommended distribution is openSUSE 10.3 or greater.</para>
      </listitem>
      <listitem>
        <para>Example files from the <package>kiwi</package>
        package:</para>
        <variablelist>
          <varlistentry>
            <term>
              <filename>/usr/share/doc/packages/kiwi/examples/test1</filename>
            </term>
            <listitem>
              <para>Is an openSUSE 10.3 KDE system, based on patterns.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <filename>/usr/share/doc/packages/kiwi/examples/test2</filename>
            </term>
            <listitem>
              <para>This is an openSUSE 10.3 console system, based on a
                package list.</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <para>Both examples have the users
          <systemitem class="username">root</systemitem>
          and
          <systemitem class="username">linux</systemitem>
          with the password
          <literal>linux</literal>.
        </para>
      </listitem>
      <listitem>
        <para>The documentation of the KIWI RELAX NG Schema. The KIWI
          configuration file is based on XML and the structure is
          documented in the package <package>kiwi</package> under
            <filename>/usr/share/doc/packages/kiwi/kiwi.html</filename>.
          <remark>Should we use a WWW address here, instead of the local
          one?</remark>
          The information therein is needed to know the correct elements
          and attributes to create a valid XML file.
        </para>
      </listitem>
    </orderedlist>
  </sect1>
  <sect1 id="sec.kiwi.process">
    <title>Knowing KIWI&rsquo;s Build Process</title>
    <para>The building process of KIWI is separated into three steps:</para>
    <orderedlist>
      <listitem>
        <formalpara>
          <title>Physical Extend</title>
          <para>This stage prepares the content of your new filesystem.
            During this stage, you determine which packages are
            installed on your image and which configuration files are
            included.</para>
        </formalpara>
      </listitem>
      <listitem>
        <formalpara>
          <title>Logical Extend</title>
          <para>This stage creates the operating system image based on
            the the first step.</para>
        </formalpara>
      </listitem>
      <listitem>
        <formalpara>
          <title>Deployment</title>
          <para>The resulting ISO image can be deployed with different
            methods like installed on a harddisc or played by a
            virtualization system (Vmware, Qemu, VirtualBox).</para>
        </formalpara>
      </listitem>
    </orderedlist>
    <para>Detailed background can be found in the
      <citetitle>System Design</citetitle>
      paper, see
      <filename>/usr/share/doc/packages/kiwi/kiwi.pdf</filename>.
    </para>
  </sect1>
  <sect1 id="sec.kiwi.livecd">
    <title>Creating a Graphical Live ISO CD</title>
    <para>To create an ISO image, proceed as follows:</para>
    <procedure>
      <step>
        <para>Install the package
          <package>kiwi</package>
          and resolve any dependencies.
        </para>
      </step>
      <step>
        <para>Open a shell and become root.</para>
      </step>
      <step>
        <para>Run KIWI with the following command to prepare the first
          phase (<quote>physical extend</quote>):</para>
        <screen><command>kiwi</command> --prepare /usr/share/doc/packages/kiwi/examples/test1 \
    --root /tmp/kiwi-test1</screen>
        <para>If everything is correct, you see the message
          <errortext>KIWI exited sucessfully</errortext>.</para>
      </step>
      <step>
        <para>Build the ISO image:</para>
        <screen><command>kiwi</command> --create /tmp/kiwi-test1 -d /tmp --type iso</screen>
        <para>KIWI builds the ISO image. If everything is correct, it
          print the message
          <errortext>KIWI exited sucessfully</errortext>.</para>
      </step>
      <step>
        <para>Test the ISO image with Qemu, Vmware or VirtualBox.</para>
      </step>
    </procedure>
  </sect1>
  <sect1 id="sec.kiwi.minimal">
    <title>Creating a Minimal Image</title>
    <para>If you want to start with a minimal example and extend it
      later, proceed as follows:</para>
    <procedure>
      <step>
        <para>Copy the example directory from
          <filename>test2</filename>
          from your KIWI package:</para>
        <screen>cp -a /usr/share/doc/packages/kiwi/examples/test2/ .</screen>
      </step>
      <step>
        <para>Open the configuration file
          <filename>test1/config.xml</filename> and locate the XML
          element <sgmltag>packages</sgmltag>:</para>
        <screen>&lt;packages>
  &lt;package name="aaa_base"/>
  &lt;package name="aaa_skel"/>
  &lt;package name="acl"/>
  &lt;package name="acpid"/>       
&lt;/packages></screen>
        <note>
          <title>Essential Packages</title>
          <para>The following lines are essential and
            <emphasis>must</emphasis>
            always be present:</para>
          <screen>&lt;packages type="boot">
  &lt;package name="filesystem"/>
  &lt;package name="glibc-locale"/>
&lt;/packages></screen>
        </note>
      </step>
      <step>
        <para>Change the list of packages to your needs, but be aware
          not to remove essential ones like
          <package>aaa_base</package>,
          <package>aaa_skel</package>
          and others.</para>
        <remark>FIXME: Link to list of required packages?</remark>
      </step>
      <step>
        <para>Save the configuration file.</para>
      </step>
      <step>
        <para>Run the first phase (physical extend):</para>
        <screen><command>kiwi</command> --prepare test1 --root /tmp/kiwi-test2</screen>
      </step>
      <step>
        <para>Run the second phase (logical extend):</para>
        <screen><command>kiwi</command> --create /tmp/kiwi-test2 -d /tmp --type iso</screen>
      </step>
      <step>
        <para>Test the ISO image.</para>
      </step>
    </procedure>
  </sect1>
  <sect1 id="sec.kiwi.custom">
    <title>Creating Customized Images</title>
    <para>This section describes different scenarios.</para>
    <!-- More Ideas:
      * Creating a Rescue System
      * Creating a Router/Firewall System
      * Building an Image for Printserver Functionality
      * Creating an Image for Publishing Tasks
    -->
    <sect2 id="sec.kiwi.livecd.developer">
      <title>Creating a Developer Image</title>
      <para>If you need an image for developing programs, you can add
        patterns in your configuration file. In this case, proceed
        as follows:</para>
      <procedure>
        <step>
          <para>Copy the example directory from
            <filename>test2</filename>
            from your KIWI package:</para>
          <screen>cp -a /usr/share/doc/packages/kiwi/examples/test2/  devel/</screen>
        </step>
        <step>
          <para>Open the configuration file
            <filename>devel/config.xml</filename>
            and change the attribute
            <sgmltag class="attribute">name</sgmltag>
            in element
            <sgmltag>image</sgmltag>
            to
            <sgmltag class="attvalue">devel</sgmltag>.</para>
        </step>
        <step>
          <para>Add your patterns into the
            <sgmltag>packages</sgmltag>
            element but before
            <sgmltag class="endtag">packages</sgmltag>:</para>
          <screen>&lt;packages type="...">
  &lt;packages name="aaa_base"/>
  &lt;!&#x2d;&#x2d; More package elements follows &#x2d;&#x2d;>
  &lt;opensusePattern name="devel_basis"/>
  &lt;!&#x2d;&#x2d; Add more patterns... &#x2d;&#x2d;>  
&lt;/packages></screen>
          <note>
            <title>Getting Pattern Names</title>
            <para>You can get the names of pattern in your installed
              system under
              <filename class="directory">/var/cache/zypp/raw/<replaceable>REPO</replaceable>/suse/setup/descr/</filename>
              (replace
              <replaceable>REPO</replaceable>
              with the name of your system, for example
              <filename>openSUSE-10.3-retail 10.3</filename>) or look
              into the directory
              <filename class="directory">suse/setup/descr/</filename>
              on your DVD or first CD.
            </para>
          </note>
          <para>Depending what your interests in development are, you
            have to add more patterns.
            <xref linkend="tab.kiwi.pattern" xrefstyle="select:label nopage"/>
            contains an overview of some common pattern names.</para>
          <table id="tab.kiwi.pattern">
            <title>Examples of Pattern Names for Development</title>
            <tgroup cols="2">
              <thead>
                <row>
                  <entry>Pattern</entry>
                  <entry>Explanation</entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry>devel_C_C++</entry>
                  <entry>Tools and libraries for software development
                    using C/C++ and other derivative of the C
                    programming language</entry>
                </row>
                <row>
                  <entry>devel_basis</entry>
                  <entry>Minimal set of tools for compiling and linking
                    applications</entry>
                </row>
                <row>
                  <entry>devel_ide</entry>
                  <entry>Integrated Development Environments</entry>
                </row>
                <row>
                  <entry>devel_java</entry>
                  <entry>Tools and libraries for software development
                    using the Java programming language</entry>
                </row>
                <row>
                  <entry>devel_kernel</entry>
                  <entry>Tools for Linux kernel development</entry>
                  <!-- git, quilt, indent, patch-utils -->
                </row>
                <row>
                  <entry>devel_python</entry>
                  <entry>Tools and libraries for software development
                    using the Python programming language</entry>
                  <!-- eric, libxml2-python, libxslt-python, python-qt, pyxml, treeline -->
                </row>
                <row>
                  <entry>devel_web</entry>
                  <entry>Tools and libraries for Web application
                    development</entry>
                  <!-- bluefish, nvu, html-dtd, latex2html, php5, tidy,
                    selfhtml, kdewebdev3 -->
                </row>
              </tbody>
            </tgroup>
          </table>
        </step>
        <step>
          <para>Save the configuration file.</para>
        </step>
        <step>
          <para>Run the first phase (physical extend):</para>
          <screen><command>kiwi</command> --prepare devel --root /tmp/kiwi-devel</screen>
        </step>
        <step>
          <para>Run the second phase (logical extend):</para>
          <screen><command>kiwi</command> --create /tmp/kiwi-devel -d /tmp --type iso</screen>
        </step>
        <step>
          <para>Test the ISO image.</para>
        </step>
      </procedure>
    </sect2>
    
    <sect2 id="sec.kiwi.publishing">
      <title>Creating a Rescue System</title>
      <para>A rescue system lets you debug your system. It contains
        tools that are required for these tasks. Mainly the overall
        procedure is very similar to the last one. Proceed as follows:</para>
      <procedure>
        <step>
          <para>Install on your system the packages
            <package>aufs</package> and <package>squashfs</package>.</para>
        </step>
        <step>
          <para>Copy the example directory from
            <filename>test2</filename> from your KIWI package:</para>
          <screen>cp -a /usr/share/doc/packages/kiwi/examples/test2/ rescue/</screen>
        </step>
        <step>
          <para>Open the configuration file
            <filename>devel/config.xml</filename> and change the
            attribute <sgmltag class="attribute">name</sgmltag> in
            element <sgmltag>image</sgmltag> to <sgmltag
              class="attvalue">rescue</sgmltag>.</para>
        </step>
        <step>
          <para>Add your packages into <filename>config.xml</filename>.
            Insert before the <sgmltag
              class="endtag">packages</sgmltag> end tag the following
              packages:</para>
          <table id="tab.kiwi.rescuepackages">
            <title>Examples of Pattern Names for Development</title>
            <tgroup cols="2">
              <thead>
                <row>
                  <entry>Pattern</entry>
                  <entry>Explanation</entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry>
                    <package>dar</package>
                  </entry>
                  <entry>Backup and Restore Application</entry>
                </row>
                <row>
                  <entry>
                    <package>ddrescue</package>
                  </entry>
                  <entry>Data Copying in the Presence of I/O Errors</entry>
                </row>
                <row>
                  <entry>
                    <package>dmraid</package>
                  </entry>
                  <entry>A Device-Mapper Software RAID Support Tool</entry>
                </row>
                <row>
                  <entry>
                    <package>fuse</package>
                  </entry>
                  <entry>User space File System</entry>
                </row>
                <row>
                  <entry>
                    <package>fuseiso</package>
                  </entry>
                  <entry>FUSE module to mount CD-ROM images with ISO9660 filesystems in them</entry>
                </row>
                <row>
                  <entry>
                    <package>fusesmb</package>
                  </entry>
                  <entry>SMB for FUSE</entry>
                </row>
                <row>
                  <entry>
                    <package>hfsutils</package>
                  </entry>
                  <entry>Tools Used for the Macintosh's Hierarchical File System</entry>
                </row>
                <row>
                  <entry>
                    <package>jfsutils</package>
                  </entry>
                  <entry>IBM JFS Utility Programs</entry>
                </row>
                <row>
                  <entry>
                    <package>mtools</package>
                  </entry>
                  <entry>floppy daemon for remote access to floppy drive</entry>
                </row>
                <row>
                  <entry>
                    <package>ntfsprogs</package>
                  </entry>
                  <entry>NTFS filesystem libraries and utilities</entry>
                </row>
                <row>
                  <entry>
                    <package>parted</package>
                  </entry>
                  <entry>GNU partitioner</entry>
                </row>
                <row>
                  <entry>
                    <package>scpm</package>
                  </entry>
                  <entry>System Configuration Profile Management</entry>
                </row>
                <row>
                  <entry>
                    <package>squashfs</package>
                  </entry>
                  <entry>A Read-Only File System with Efficient Compression</entry>
                </row>
                <row>
                  <entry>
                    <package>sshfs</package>
                  </entry>
                  <entry>Filesystem client based on SSH file transfer protocol</entry>
                </row>
                <row>
                  <entry>
                    <package>sudo</package>
                  </entry>
                  <entry>Execute some commands as root</entry>
                </row>
                <row>
                  <entry>
                    <package>udftools</package>
                  </entry>
                  <entry>UDF filesystem tools</entry>
                </row>
                <row>
                  <entry>
                    <package>xfsdump</package>
                  </entry>
                  <entry>Administrative Utilities for the XFS File System</entry>
                </row>
                <row>
                  <entry>
                    <package>xfsprogs</package>
                  </entry>
                  <entry>Utilities for managing the XFS file system</entry>
                </row>
              </tbody>
            </tgroup>
          </table>
        </step>
        <step>
          <para>Save the configuration file.</para>
        </step>
        <step>
          <para>Run the first phase (physical extend):</para>
          <screen><command>kiwi</command> --prepare devel --root /tmp/kiwi-devel</screen>
        </step>
        <step>
          <para>Run the second phase (logical extend):</para>
          <screen><command>kiwi</command> --create /tmp/kiwi-devel -d /tmp --type iso</screen>
        </step>
        <step>
          <para>Test the ISO image.</para>
        </step>
      </procedure>
      
      <!-- 
      cp -a /usr/share/doc/packages/kiwi/examples/test2/ rescue
      Install aufs and squashfs
      Edit config.xml
      -->
    </sect2>
    
  </sect1>
</article>