<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
  "http://www.docbook.org/xml/4.4/docbookx.dtd"
[
 <!ENTITY % entities SYSTEM "entity-decl.ent">
 %entities;
]>

<!--
 ***************************************************
 Please see license.xml for this document's license.
 ***************************************************
-->

<sect1 id="sec.project_structure.metadata" xml:base="project_metadata.xml">
 <title>Meta Data</title>
 <abstract>
  <para>
   Meta data describing the projects and packages belonging to a project are
   stored in XML format on the server.  You can edit this information with the
   Web client (see <xref linkend="cha.webclient"/>) or the command line client
   (see <xref linkend="cha.commandline"/>).  Because the Build Service is still
   work in progress, these tools are not always in sync.  The third possiblity
   is, making use of the public API (see <ulink
   url="http://api.opensuse.org/apidocs"/>) which we do not describe here.
  </para>
 </abstract>

 <sect2 id="sec.project_structure.metadata.project">
  <title>Project Meta Data</title>
  <remark condition="clarity">
   2007-08-28 - fs:
   The following is probably better suited for the command-line client chapter.
  </remark>
  <para>
   For example, the meta data of the <literal>XML</literal> project look as
   follows:
  </para>

  <screen><![CDATA[<project name="XML">
  <title>XML Tools</title>
  <description>XML libraries and tools like libxml2 and DTDs. [...]</description>
  <person role="maintainer" userid="schiele"/>
  <person role="maintainer" userid="cthiel1"/>
  <person role="maintainer" userid="keichwa"/>
  <person role="maintainer" userid="thomas-schraitle"/>
  <person role="maintainer" userid="bwalle"/>
  <person role="maintainer" userid="prusnak"/>
  <repository name="xml-10.0">
    <path project="SUSE:SL-10.0" repository="standard"/>
    <arch>i586</arch>
    <arch>x86_64</arch>
  </repository>
  <repository name="xml-10.1">
    <path project="SUSE:SL-10.1" repository="standard"/>
    <arch>i586</arch>
    <arch>x86_64</arch>
  </repository>
  <repository name="xml-10.2">
    <path project="openSUSE:10.2" repository="standard"/>
    <arch>i586</arch>
    <arch>x86_64</arch>
  </repository>
  <repository name="xml-factory">
    <path project="SUSE:Factory" repository="standard"/>
    <arch>i586</arch>
    <arch>x86_64</arch>
  </repository>
  <repository name="xml-sle10">
    <path project="SUSE:SLE-10" repository="standard"/>
    <arch>i586</arch>
    <arch>x86_64</arch>
  </repository>
  <repository name="xml-sles9">
    <path project="SUSE:SLES-9" repository="standard"/>
    <arch>i586</arch>
    <arch>x86_64</arch>
  </repository>
</project>
]]>
</screen>

  <para>The project meta data consists of a relative flat data structure:
</para>

  <variablelist>
   <varlistentry>
    <term><sgmltag>title</sgmltag></term>
    <listitem>
     <para>The title of the project.</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><sgmltag>description</sgmltag></term>
    <listitem>
     <para>The description of the project.  Separate paragraphs with an empty
     line.</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><sgmltag>person</sgmltag></term>
    <listitem>
     <para>A list of persons who maintain the project.  Add as many
     <sgmltag>person</sgmltag> elements as needed and assign user information
     to the <literal>role</literal> and <literal>userid</literal>
     attributes.</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><sgmltag>repository</sgmltag></term>
    <listitem>
     <para>Define repositories for which you want to build packages.  Assign
      sensible names to the <literal>name</literal> attribute.
     </para>
     <para>Every repository consists of a <sgmltag>path</sgmltag> to other
      repositories used for building  and one or more <sgmltag>arch</sgmltag>
      elements setting the architectures for which you want to build the
      packages.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <!--Include/Exclude or Enable/Disable features; check the names-->

 </sect2>

 <sect2 id="sec.project_structure.metadata.package">
  <title>Package Meta Data</title>

  <para>
   For example, the meta data of the <literal>xmlformat</literal> package look
   as follows:
  </para>

  <screen><![CDATA[<package project="XML" name="xmlformat">
  <title>XML document formatter</title>
  <description>This package is based on the package 'xmlformat' from
project 'openSUSE:Factory'.

xmlformat is a configurable formatter (or "pretty-printer") for XML
documents. It provides control over indentation, line-breaking, and
text wrapping. These properties can be defined on a per-element basis.

xmlformat provides improved diagnostic information when a document is
not well-formed. (Prints line and token number, and stack trace).
</description>
  <person role="maintainer" userid="thomas-schraitle"/>
</package>
]]></screen>

  <remark condition="clarity">
   2007-08-28 - fs:
   In the meantime, additional tags have been implemented, these need to be
   documented as well.
  </remark>

  <variablelist>
   <varlistentry>
    <term><sgmltag>title</sgmltag></term>
    <listitem>
     <para>The title or summary description of the package.</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><sgmltag>description</sgmltag></term>
    <listitem>
     <para>The description of the project.  Separate paragraphs with an empty
     line.</para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><sgmltag>person</sgmltag></term>
    <listitem>
     <para>A list of persons who maintain the package.  Add as many
     <literal>person</literal> elements as needed and assign user information
     to the <literal>role</literal> and <literal>userid</literal>
     attributes.</para>
    </listitem>
   </varlistentry>

  </variablelist>

  <para>If you do not want a package to be built for a repository or
architecure use one of the following <literal>disable</literal> settings inside
of the <sgmltag>build</sgmltag> element:
</para>

<screen><![CDATA[<build>
 <disable arch="<build-arch>"/>
 <disable repository="<name-of-build-repository>"/>
</buil>]]></screen>

<para>Or use both to disable the build for an architecure of a single
repository; this way, the package will not be built for
<literal>x86_64</literal> of the <literal>SLES_9</literal> repository:</para>

<screen><![CDATA[<build>
 <disable repository="SLES_9" arch="x86_64"/>
</build>]]></screen>

 </sect2>

</sect1>

<!-- Keep this comment at the end of the file
Local variables:
coding:utf-8
mode:xml
sgml-indent-step:1
sgml-omittag:nil
sgml-shorttag:nil
End:
-->
