<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
  "http://www.docbook.org/xml/4.4/docbookx.dtd"
[
 <!ENTITY % entities SYSTEM "entity-decl.ent">
 %entities;
]>

<!--
 ***************************************************
 Please see license.xml for this document's license.
 ***************************************************
-->

<sect1 id="sec.kiwi.creating" xml:base="kiwi_creating.xml">
 <title>Creating Operating System Images</title>
 <para>
  The creation of operating system images from a physical extend is based on
  image description trees. An image description tree contains a set of files
  in a certain directory structure that are required to generate an image
  using <filename>kiwi.pl</filename>. An image description tree is organized
  as follows:
 </para>
<screen>
 |
 |- cdboot/
 |   |- isolinux/
 |   |  |
 |   |  |- images
 |   |  |- messages
 |   |  |- translations
 |   |- isolinux.cfg
 |   |- isolinux.sh
 | 
 |- config/
 |  |
 |  |- some optional files/directories
 |
 |- config.sh
 |- config-yast.xml
 |- config.xml
 |- images.sh
 |- .profile
 |- root/
 |  |
 |  |- some optional files/directories
</screen>
 <sect2 id="sec.kiwi.creating.cdboot">
  <title><filename>cdboot</filename></title>
  <para>
   An optional directory needed when creating a bootable CD. It contains files
   required by the isolinux boot loader. This includes the
   <filename>isolinux.cfg</filename> configuration file, the
   <filename>isolinux/</filename> directory containing images, messages and
   translation files for the boot screen. In addition the
   <filename>isolinux.sh</filename> build script needs to be provided. It
   creates an ISO image from a prebuild CD tree based upon the configuration
   from  <filename>isolinux.cfg</filename>.
  </para>
 </sect2>
 <sect2 id="sec.kiwi.creating.config">
  <title><filename>config</filename></title>
  <para>
   Optional Subdirectory that contains Bash scripts that are executed after
   all packages have been installed, for example to remove parts of a package
   that are not needed for the operating system. The name of the bash script
   must resemble the package name listed in the
   <filename>config.xml</filename> file.
  </para>
 </sect2>
 <sect2 id="sec.kiwi.creating.config.sh">
  <title><filename>config.sh</filename></title>
  <para>
   Optional configuration script while creating the physical extend. This
   script is executed at the end of the installation when having switched to
   the operating sstem image with <command>chroot</command>, but
   <emphasis>before</emphasis> the package scripts paced in the config
   directory (see <xref linkend="sec.kiwi.creating.config"/>) have run. It is
   used to configure the image system by, for example, activating or
   deactivating services.
  </para>
 </sect2>
 <sect2 id="sec.kiwi.creating.config-yast.xml">
  <title><filename>config-yast.xml</filename></title>
  <para>
   Optional &ay; configuration file. To generate such a file, check
   <guimenu>Clone This System for &ay;</guimenu> during the installation of
   &product;. This creates a ready-to-use profile as
   <filename>/root/autoinst.xml</filename> that can be used to create clones
   of this particular installation. To create an autoinstallation file from
   scratch or to edit an existing one, use the &yast; module
   <guimenu>Autoinstallation</guimenu>.
  </para>
  <para>
   In order to use <filename>/root/autoinst.xml</filename> move it to the
   images description tree and rename it to
   <filename>config-yast.xml</filename>. kiwi will process the file and setup
   your image as follows:
  </para>
  <itemizedlist>
   <listitem>
    <para>
     When booting the image &yast; is automatically started in &ay; mode
    </para>
   </listitem>
   <listitem>
    <para>
     The system is configured by &yast; by applying the rules from
     <filename>config-yast.xml</filename>
    </para>
   </listitem>
   <listitem>
    <para>
     If the process finishes successfully the environment is cleaned and
     &ay; will not be started with next reboot.
    </para>
   </listitem>
  </itemizedlist>
 </sect2>
 <sect2 id="sec.kiwi.creating.config.xml">
  <title><filename>config.xml</filename></title>
   <para>
    The main configuration file, defining image type, base name, options, and
    the package list:
   </para>
<screen>
&lt;image name="Name" inherit="optional path"&gt;<co id="co.kiwi.config.image"/>
  &lt;description type="boot|system"&gt;<co id="co.kiwi.config.description"/>
    &lt;author&gt;<replaceable>Author</replaceable>&lt;/author&gt;
    &lt;contact&gt;<replaceable>Contact</replaceable>&lt;/contact&gt;
    &lt;specification&gt;<replaceable>Specification</replaceable>&lt;/specification&gt;
  &lt;/description&gt;
  &lt;preferences&gt;<co id="co.kiwi.config.preferences"/>
    &lt;type primary="true" boot="..." filesystem="..." flags="..."&gt;Type&lt;/type&gt;
    &lt;version&gt;<replaceable>Version</replaceable>&lt;/version&gt;
    &lt;size unit="<replaceable>Unit</replaceable>"&gt;<replaceable>Size</replaceable>&lt;/size&gt;
    &lt;packagemanager&gt;<replaceable>Name</replaceable>&lt;/packagemanager&gt;
    &lt;compressed&gt;Yes|No&lt;/compressed&gt;
  &lt;/preferences&gt;
  &lt;users group="<replaceable>Groupname</replaceable>"&gt;<co id="co.kiwi.config.users"/>
    &lt;user name="<replaceable>User</replaceable>" pwd="<replaceable>Password</replaceable>" home="<replaceable>Homedirectory</replaceable>"/&gt;
  &lt;/users&gt;
  &lt;drivers type="<replaceable>Type</replaceable>"&gt;<co id="co.kiwi.config.drivers"/>
    &lt;file name="<replaceable>Filename</replaceable>"/&gt;
  &lt;/drivers&gt;
  &lt;repository type="<replaceable>Type</replaceable>"&gt;<co id="co.kiwi.config.repository"/>
    &lt;source path="<replaceable>Url</replaceable>"/&gt;
  &lt;/repository&gt;
  &lt;/deploy server="<replaceable>IP address</replaceable>"
    blocksize="<replaceable>Size</replaceable>"&gt;<co id="co.kiwi.config.deploy"/>
    &lt;partitions device="<replaceable>Devicename</replaceable>"&gt;
    &lt;partition type="<replaceable>Type</replaceable>"
    number="<replaceable>Nuber</replaceable>" size="<replaceable>Size</replaceable>"/&gt;
      &lt;partition .../&gt;
    &lt;/partitions&gt;
    &lt;configuration source="<replaceable>Source</replaceable>"
    dest="<replaceable>Destination</replaceable>"/&gt;
  &lt;/deploy&gt;
  &lt;packages type="<replaceable>Type</replaceable>"&gt;<co id="co.kiwi.config.packages"/>
    &lt;package name="<replaceable>Packagename</replaceable>" arch="<replaceable>Arch</replaceable>"/&gt;
    &lt;opensusePattern name="<replaceable>Patternname</replaceable>"/&gt;
    &lt;ignore name="<replaceable>Packagename</replaceable>"/&gt;
  &lt;/packages&gt;
&lt;/image&gt;
</screen>
  <calloutlist>
   <callout arearefs="co.kiwi.config.image">
    <para>
     The <sgmltag>image</sgmltag> element contains the attribute <sgmltag
      class="attribute">name</sgmltag> which spcifies the base name of the
     image. It is automatically expanded with the version number and the
     current date. The version number is extracted from the directory in which
     the description files for this image are located. When using the optional
     attribute <sgmltag class="attribute">inherit</sgmltag> with a path to
     another kiwi description, this description will be appended to the
     current one.
    </para>
   </callout>
   <callout arearefs="co.kiwi.config.description">
    <para>
     <sgmltag>description</sgmltag>: TODO
    </para>
   </callout>
   <callout arearefs="co.kiwi.config.preferences">
    <para>
     The <sgmltag>preferences</sgmltag> element contains information needed to
     create the logical extend. The following sub-elements are defined:
    </para>
    <variablelist>
     <varlistentry>
      <term><sgmltag>type</sgmltag></term>
      <listitem>
       <para>
	The image type of the logical extend. When specifying multiple
	entries, the additional attribute <sgmltag
	 class="attribute">primary</sgmltag> setting the primary type needs to
	be filled in, otherwise the first entry of the <sgmltag>type</sgmltag>
	value is used.
       </para>
       <para>
	The following values for <sgmltag>type</sgmltag> are valid:
       </para>
       <orderedlist numeration="loweralpha">
	<listitem>
	 <para>
	  <sgmltag class="attvalue">ext2</sgmltag>, <sgmltag
	   class="attvalue">ext3</sgmltag>, <sgmltag
	   class="attvalue">reiserfs</sgmltag>, <sgmltag
	   class="attvalue">squashfs</sgmltag>, <sgmltag
	   class="attvalue">cpio</sgmltag></para>
	</listitem>
	<listitem>
	 <para>
	  <sgmltag class="attvalue">iso</sgmltag>, <sgmltag
	   class="attvalue">split</sgmltag>, <sgmltag class="attvalue">usb
	   vmx</sgmltag>, <sgmltag class="attvalue">xen</sgmltag>, <sgmltag
	   class="attvalue">pxe</sgmltag>
	 </para>
	</listitem>
       </orderedlist>
       <para>
	The second group of types requires additional attributes:
       </para>
       <variablelist>
	<varlistentry>
	 <term><sgmltag class="attribute">primary</sgmltag></term>
	 <listitem>
	  <para>
	   attribute to specify the primary type. The
	   <systemitem>kiwi</systemitem> option <option>--type</option>
	   allows to select between the types
	  </para>
	 </listitem>
	</varlistentry>
	<varlistentry>
	 <term><sgmltag class="attribute">boot</sgmltag></term>
	 <listitem>
	  <para>
	   attribute to specify the boot image (<filename>initrd</filename>)
	   which should be used and created for this system image
	   description. The boot images for kiwi are stored at
	   <filename>/usr/share/kiwi/image</filename> and are grouped
	   by function into the following directories:
	   <filename>isoboot</filename>, <filename>netboot</filename>,
	   <filename>xennetboot</filename>, <filename>usbboot</filename>,
	   <filename>vmxboot</filename> and <filename>xenboot</filename>. The
	   attribute value is the path relative to
	   <filename>/usr/share/kiwi/image</filename>.
	  </para>
	 </listitem>
	</varlistentry>
	<varlistentry>
	 <term><sgmltag class="attribute">flags</sgmltag></term>
	 <listitem>
	  <para>
	   attribute to specify flags for the image type. Currently only the
	   <sgmltag class="attvalue">compressed</sgmltag> flag for the
	   <literal>iso</literal> type exists. This flag causes the live
	   media to be based on a squashfs compressed file system.
	  </para>
	 </listitem>
	</varlistentry>
	<varlistentry>
	 <term><sgmltag>filesystem</sgmltag></term>
	 <listitem>
	  <para>
	   attribute to specify the filesystem. Could be set to <sgmltag
	    class="attvalue">ext2</sgmltag>, <sgmltag
	    class="attvalue">ext3</sgmltag>, <sgmltag
	    class="attvalue">reiserfs</sgmltag>, <sgmltag
	    class="attvalue">squashfs</sgmltag> or <sgmltag
	    class="attvalue">cpio</sgmltag>
	  </para>
	 </listitem>
	</varlistentry>
       </variablelist>
       <para>
	The following list is an overview of different boot image
	(<filename>initrd</filename>) types:
       </para>
       <variablelist>
	<varlistentry>
	 <term>
	  <code>
	   &lt;type boot="isoboot/my.iso"
	   flags="compressed"&gt;iso&lt;/type&gt;
	  </code>
	 </term>
	 <listitem>
	  <para>
	   Creates an <filename>.iso</filename> image. The filename of the
	   image is specified with <sgmltag class="attribute">boot</sgmltag>.
	   If the optional attribute <sgmltag
	    class="attribute">flags</sgmltag> is set to <sgmltag
	    class="attvalue">compressed</sgmltag> squashfs compression will be
	   used for the read-only part of the iso.
	  </para>
	 </listitem>
	</varlistentry>
	<varlistentry>
	 <term>
	  <code>
	   &lt;type boot="usbboot/my.iso"
	   filesystem="ext3"&gt;usb&lt;/type&gt;
	  </code>
	 </term>
	 <listitem>
	  <para>
	   Creates a system and boot image suitable to run on an USB stick
	   (deployed with the kiwi <option>--bootstick</option> option).
	   <sgmltag class="attribute">filesystem</sgmltag> specifies one of
	   <sgmltag class="attvalue">ext2</sgmltag>,<sgmltag
	    class="attvalue">ext3</sgmltag>, or <sgmltag
	    class="attvalue">reiserfs</sgmltag> and the value of <sgmltag
	    class="attribute">boot</sgmltag> is the path to the image file
	  </para>
	 </listitem>
	</varlistentry>
	<varlistentry>
	 <term>
	  <code>
	   &lt;type boot="vmxboot/my.iso"
	   filesystem="ext3"&gt;vmx&lt;/type&gt;
	  </code>
	 </term>
	 <listitem>
	  <para>
	   Creates a virtual disk image for qemu or VMware. <sgmltag
	    class="attribute">filesystem</sgmltag>
	   specifies one of <sgmltag class="attvalue">ext2</sgmltag>,<sgmltag
	    class="attvalue">ext3</sgmltag>, or <sgmltag
	    class="attvalue">reiserfs</sgmltag> and the value of <sgmltag
	    class="attribute">boot</sgmltag> is the path to the image file
	  </para>
	 </listitem>
	</varlistentry>
	<varlistentry>
	 <term>
	  <code>
	   &lt;type boot="xenboot/my.iso"
	   filesystem="ext3"&gt;xen&lt;/type&gt;
	  </code>
	 </term>
	 <listitem>
	  <para>
	   Creates a Xen boot and system image as well as the Xen
	   configuration file. filesystem specifies one of <sgmltag
	    class="attvalue">ext2</sgmltag>,<sgmltag
	    class="attvalue">ext3</sgmltag>, or <sgmltag
	    class="attvalue">reiserfs</sgmltag> and the value of <sgmltag
	    class="attribute">boot</sgmltag> is the path to the image file
	  </para>
	 </listitem>
	</varlistentry>
	<varlistentry>
	 <term>
	  <code>
	   &lt;type boot="netboot/my.iso"
	   filesystem="ext3"&gt;pxe&lt;/type&gt;
	  </code>
	 </term>
	 <listitem>
	  <para>
	   Creates a PXE boot and system image. filesystem specifies one of
	   <sgmltag class="attvalue">ext2</sgmltag>,<sgmltag
	    class="attvalue">ext3</sgmltag>, or <sgmltag
	    class="attvalue">reiserfs</sgmltag> and the value of <sgmltag
	    class="attribute">boot</sgmltag> is the path to the netboot or
	   xennetboot image file
	  </para>
	 </listitem>
	</varlistentry>
	<varlistentry>
	 <term>
	  <code>
	   &lt;type boot="netboot/my.iso"
	   filesystem="<replaceable>type-rw</replaceable>,
	   <replaceable>type-ro</replaceable>"&gt;split&lt;/type&gt;
	  </code>
	 </term>
	 <listitem>
	  <para>
	   Createa a splitted image with a read-only and a read-write part.
	   <replaceable>type-rw</replaceable> specifies one of <sgmltag
	    class="attvalue">ext2</sgmltag>, <sgmltag
	    class="attvalue">ext3</sgmltag> or <sgmltag
	    class="attvalue">reiserfs</sgmltag>,
	   <replaceable>type-ro</replaceable> specifies one of <sgmltag
	    class="attvalue">ext2</sgmltag>, <sgmltag
	    class="attvalue">ext3</sgmltag>, <sgmltag
	    class="attvalue">reiserfs</sgmltag>, <sgmltag
	    class="attvalue">cramfs</sgmltag> or <sgmltag
	    class="attvalue">squashfs</sgmltag>. Booting split images is only
	   supported by the netboot and xennetboot boot images which need to
	   be created with a separate kiwi run.
	  </para>
	 </listitem>
	</varlistentry>
       </variablelist>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><sgmltag>version</sgmltag></term>
      <listitem>
       <para>
	The three-part version number with the following format:
	<literal><replaceable>Major</replaceable>.<replaceable>Minor</replaceable>.<replaceable>Release</replaceable></literal>. 
	The following rules should be applied when incrementing the version
	number:
       </para>
       <itemizedlist>
	<listitem>
	 <para>
	  Increment the <literal>Release</literal> number on minor
	  modifications where no packages have been added or removed
	 </para>
	</listitem>
	<listitem>
	 <para>
	  Increment the <literal>Minor</literal> number and reset the
	  <literal>Release</literal> number to <literal>0</literal> in case
	  packages have been added or removed
	 </para>
	</listitem>
	<listitem>
	 <para>
	  Increment the <literal>Major</literal> number if the size of the
	  image changes.
	 </para>
	</listitem>
       </itemizedlist>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><sgmltag>size</sgmltag></term>
      <listitem>
       <para>
	Specifies the size of an image with a numeral value in Megabytes or
	Gigabytes. Use the attribute <sgmltag class="attribute">unit</sgmltag>
	to assign the unit:  <sgmltag class="attvalue">M</sgmltag> for
	Megabytes or <sgmltag class="attvalue">G</sgmltag> for Gigabytes.
       </para>
       <note>
	<para>
	 kiwi supports the feature of extending the image size automatically
	 if the specified value is too small. If the actual size is more than
	 100MB larger than the spcified one,  kiwi will abort with an error
	 message. On the other hand, kiwi does <emphasis>not</emphasis>
	 automatically reduce the images size if the specified value is too
	 large, because the extra space may be needed to, for example, run
	 custom scripts.
	</para>
       </note>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><sgmltag>packagemanager</sgmltag></term>
      <listitem>
       <para>
	Name of the packagemanager to be used for package installation.
	Currently <sgmltag class="attvalue">smart</sgmltag> is the default
	packagemanager but <sgmltag class="attvalue">zypper</sgmltag> will be
	supported as well.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><sgmltag>compressed</sgmltag></term>
      <listitem>
       <para>
	TODO
       </para>
      </listitem>
     </varlistentry>    
     <varlistentry>
      <term><sgmltag>timezone</sgmltag></term>
      <listitem>
       <para>
	The time zone. Available time zones are located in the directory
	<filename>/usr/share/zoneinfo</filename>. Specify the attribute value
	relative to <filename>/usr/share/zoneinfo</filename>&mdash; e.g.
	<sgmltag class="attvalue">Europe/Berlin</sgmltag> for
	<filename>/usr/share/zoneinfo/Europe/Berlin</filename>. kiwi uses this
	value to set up the timezone in <filename>/etc/localtime</filename>
	for the image.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><sgmltag>keytable</sgmltag></term>
      <listitem>
       <para>
	Contains the name of the console keymap to use. The value corresponds
	to a map file in <filename>/usr/share/kbd/keymaps</filename>. The
	variable <varname>KEYTABLE</varname> within the file
	<filename>/etc/sysconfig/keyboard</filename> will be set according to
	the keyboard mapping.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </callout>
   <callout arearefs="co.kiwi.config.users">
    <para>
     The optional <sgmltag>users</sgmltag> element contains the users to be
     added to the image. The attribute <sgmltag
      class="attribute">group</sgmltag> specifies the group the user(s)
     belongs to. If this group doesn't exist it will be created. A
     <sgmltag>user</sgmltag> element has to be specified for each
     group. Specify the users belonging to a group with the child element
     <sgmltag>users</sgmltag> with the attributes <sgmltag
      class="attribute">name</sgmltag>, <sgmltag
      class="attribute">pwd</sgmltag> and <sgmltag
      class="attribute">home</sgmltag> for username, password and the path to
     the home directory.
    </para>
   </callout>
   <callout arearefs="co.kiwi.config.drivers">
    <para>
     The optional <sgmltag>drivers</sgmltag> element contains driver file
     names. The names are interpreted as general driver name and useed if
     they are contained in the kernel tree. The attribute <sgmltag
      class="attribute">type</sgmltag> specifies one of the following driver
     types:
    </para>
    <variablelist>
     <varlistentry>
      <term><sgmltag class="attvalue">netdrivers</sgmltag></term>
      <listitem>
       <para>
	Every file is specified relative to the directory
	<filename>/lib/modules/<replaceable>&lt;Version&gt;</replaceable>/kernel/drivers/net</filename>
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><sgmltag class="attvalue">drivers</sgmltag></term>
      <listitem>
       <para>
	Every file is specified relative to the directory
	<filename>/lib/modules/<replaceable>&lt;Version&gt;</replaceable>/kernel</filename>
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </callout>
   <callout arearefs="co.kiwi.config.repository">
    <para>
     The <sgmltag>repository</sgmltag> element defines the source path and
     type used by the package manager. The attribute <sgmltag
      class="attribute">type</sgmltag> specifies the type of the repository,
     for example, <code>type="yast2"</code>. The child element
     <sgmltag>source</sgmltag> contains the attribute <sgmltag
      class="attribute">path</sgmltag> to setup the the location of the
     repository, for example, <code>source="/image/CDs/full-i386"</code>. The
     path specifaction can be one of:
    </para>
    <itemizedlist>
     <listitem>
      <para>
       local path starting with <filename>/</filename>
      </para>
     </listitem>
     <listitem>
      <para>
       <literal>html://</literal> or <literal>ftp://</literal>
       Network-Location
      </para>
     </listitem>
     <listitem>
      <para>
       opensuse://Project-Name
      </para>
     </listitem>
     <listitem>
      <para>
       The path can include the %arch macro if needed
      </para>
     </listitem>
    </itemizedlist>
    <para>
     Multiple repository tags are allowed. For information on how to setup a
     smart source refer to <ulink url="http://labix.org/smart"/>.
    </para>
   </callout>
   <callout arearefs="co.kiwi.config.deploy">
    <para>
     TODO
    </para>
   </callout>
   <callout arearefs="co.kiwi.config.packages">
    <para>
     The <sgmltag>packages</sgmltag> element contains the list of packages
     and/or pattern names  to be used with the image. There are three
     different types of package sets or patterns. The type is specified with
     the attribute <sgmltag class="attribute">type</sgmltag>:
    </para>
    <variablelist>
     <varlistentry>
      <term><sgmltag class="attvalue">image</sgmltag></term>
      <listitem>
       <para>
	Packages used to finish the image installation. All packages which
	make up the image are listed there.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><sgmltag class="attvalue">boot</sgmltag></term>
      <listitem>
       <para>
	Packages used to start buildig the image. Basic components like
	<systemitem>libc</systemitem> or the <systemitem>smart</systemitem>
	package manager are listed here.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><sgmltag class="attvalue">xen</sgmltag></term>
      <listitem>
       <para>
	Packages used when the image needs support for Xen based
	virtualisation.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
    <para>
     Using a pattern name will enhance the package list with a number of
     additional packages belonging to this pattern. Support for patterns is
     SuSE-specific and available from openSUSE 10.2 or higher. If a pattern
     contains unwanted packages it is possible to specify a an ignore list
     with the element <sgmltag>ignore</sgmltag> and the attribute <sgmltag
      class="attribute">name</sgmltag> containing the package name.
     Restricting a package to a specific architecture can be done by using the
     <sgmltag class="attribute">arch</sgmltag> attribute a comma seperated
     list of allowed architectures in the <sgmltag>package</sgmltag> element.
    </para>
   </callout>
  </calloutlist>
 </sect2>
 <sect2 id="sec.kiwi.creating.images.sh">
  <title><filename>images.sh</filename></title>
  <para>
   Optional configuration script executed at the beginning of the image
   creation process when creating the logical extend.  It is cleans the image
   system from programs and files only needed while the physical extend
   exists.
  </para>
 </sect2>
 <sect2 id="sec.kiwi.creating.profile">
  <title>.profile</title>
  <para>
   All values entered within the <sgmltag>image</sgmltag> element of the
   <filename>config.xml</filename> file are additionally stored in a file
   called <filename>.profile</filename>. This file is created before the
   execution of an image script like <filename>config.sh</filename>,
   <filename>images.sh</filename>, or a <quote>package script</quote>. This
   makes the parameters of the config file are available as variables that can
   be sourced via script. Such a script should follow this template (replace
   <literal>name</literal> by the image name):
  </para>
  <screen>
   #!/bin/sh test -f /.kconfig &amp;&amp; . /.kconfig test -f /.profile
   &amp;&amp; . /.profile echo -n "Image
   <replaceable>&lt;name&gt;</replaceable>..." ... script code echo
   done</screen>
  <para>
   Such a  script is called within the image environment, which means it is not
   possible to damage the host system with it script even if you are using
   absolute paths
  </para>
 </sect2>
 <sect2 id="sec.kiwi.creating.root">
  <title><filename>root</filename></title>
  <para>
   Subdirectory that contains special files, directories, and scripts for
   adapting the image environment <emphasis>after</emphasis> the installation
   of all packages. The entire directory is copied into the root of
   the image tree using <command>cp <option>-a</option></command>.
  </para>
 </sect2>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
coding:utf-8
mode:xml
sgml-indent-step:1
sgml-omittag:nil
sgml-shorttag:nil
End:
-->
