#================
# FILE          : kiwi.rnc
#****************
# PROJECT       : OpenSUSE Build-Service
# COPYRIGHT     : (c) 2006 SUSE LINUX Products GmbH, Germany
#               :
# AUTHOR        : Thomas Schraitle <toms@suse.de>
# AUTHOR        : Marcus Schaefer <ms@suse.de>
#               :
# BELONGS TO    : Operating System images
#               :
# DESCRIPTION   : This is the RELAX NG Schema for KIWI
#               : configuration files.
#               : This RNG Schema is derived from the
#               : original XSD file.
#               : 
#               :
# STATUS        : Development
#
# TODO          : These are some
#               : - Isolate more attribute patterns?
#               : - Document the patterns
#               : - Improve Schema with datatypes?
#               : - Test, test, test...
#               : - Rework users element to be required. Extend the
#               :   content modell with a required root user
#               :
# FUTURE CHANGES: - Required attributes:
#                   * <profile name="" description=""/>
#                   * <package name=""/>
#                   * <metafile url="" target=""/>
#                   * <packages type="">
#                   * <opensusePattern name=""/>
#                   * <ignore name=""/>
#                   * <users group="users">
#                   * <user name="" home="" pwd=""/>
#                   * <drivers type="">
#                   * <file name=""/>
#                   * <repository type="">
#                   * <source path=""/>
#                   * <deploy blocksize="" server="">
#                   * <partitions device="/dev/sda">
#                   * <partition type="" mountpoint="" number="" size="" target=""/>
#                   * <union type="" ro="/dev/sda" rw="/dev/sdb"/>
#                   * <configuration dest="" source=""/>
#                   * ...
#                 - Insert bootstrap in image
#                 - Rename repository -> repositories and source -> repository
#                 - Change repository+ -> repositories
#                 - Rename attribute schemeversion -> schemaversion or version
#                 - repository: Add attributes pwd and username
#                 - image: rename attribute "name" -> basename
#                 - user: rename attribute "name" -> "login"
#                 - instrepo, opensusepattern, package: find a better(?)
#                   name for attribute "name"
#                 - union: rename attribute "name" -> "overlay" (?)
#                 - Fix camel case in element opensusePattern and
#                   attributes patternPackageType and patternType
#               :
#****************

namespace rng = "http://relaxng.org/ns/structure/1.0"
namespace xsi = "http://www.w3.org/2001/XMLSchema-instance"
datatypes xsd = "http://www.w3.org/2001/XMLSchema-datatypes"
namespace d   = "http://docbook.org/ns/docbook"

#==========================================
# start with image description
#
start =
  ## The start pattern of an image
  k.image

#==========================================
# main block: <image>
#

div {
	k.image.name.attribute = k.name.attribute
	k.image.noNamespaceSchemaLocation.attribute = attribute
	xsi:noNamespaceSchemaLocation { xsd:anyURI }
	k.image.schemaLocation.attribute = attribute
	xsi:schemaLocation { xsd:anyURI }
	k.image.inherit.attribute = attribute inherit { text }
	k.image.schemeversion.attribute = attribute schemeversion { "1.4" }
	k.image.attlist = k.image.name.attribute 
	  & k.image.inherit.attribute?
	  & k.image.schemeversion.attribute
	  & k.image.noNamespaceSchemaLocation.attribute?
	  & k.image.schemaLocation.attribute?

	k.image =
	  ## The root element of the configuration file
	  element image {
  		k.image.attlist,
	  	k.description,
  		k.preferences,
	  	k.profiles?,
  		k.instsource?,
  		k.users*,
  		k.drivers*,
  		k.repository+,
  		k.deploy?,
  		k.split?,
  		k.packages*
		# k.bootstrap # Future element
	}
}


#==========================================
# common attributes
#
k.name.attribute        =
  ## A name
  attribute name { text }
k.arch.attribute        =
  ## An architecture
  attribute arch { text }
k.description.attribute =
  ## A short description
  attribute description { text }
k.path.attribute        =
  ## A path
  attribute path { text }
k.profiles.attribute    =
  ## FIXME: ??
  attribute profiles { text }
k.pwd.attribute         =
  ## The password
  attribute pwd { text }
k.script.attribute      =
  ## FIXME: ??
  attribute script { text }
k.source.attribute      =
  ## FIXME: ??
  attribute source { text }
k.type.attribute        =
  ## FIXME: ??
  attribute type { text }
k.size.attribute        =
  ## FIXME: ??
  attribute size { text }
k.dest.attribute        =
  ## Destination of a ressource
  attribute dest { text }
k.username.attribute    =
  ## A name of a user
  attribute username { text }
k.profile.attribute     =
  ## FIXME: ??
  attribute profiles { text }

#==========================================
# common element <author>
#
div {
	k.author.attlist = empty
	k.author =
	  ## Author of the image
	  element author { k.author.attlist, text }
}

#==========================================
# common element <compressed>
#
div {
	k.compressed.attlist = empty
	k.compressed =
	  ## FIXME: ??
	  element compressed {
		  k.compressed.attlist,
		  text
	}
}

#==========================================
# common element <configuration>
#
div {
	k.configuration.source.attribute = k.source.attribute
	k.configuration.dest.attribute = k.dest.attribute
	k.configuration.attlist = 
		k.configuration.source.attribute
		&	k.configuration.dest.attribute

	k.configuration =
	  ## FIXME: ??
	  element configuration {
		  k.configuration.attlist,
		  empty
	}
}

#==========================================
# common element <commandline>
#
div {
	k.commandline.attlist = empty
	k.commandline = 
	  ## FIXME: ??
	  element commandline {
		  k.commandline.attlist,
		  empty
	}
}

#==========================================
# common element <contact>
#
div {
	k.contact.attlist = empty
	k.contact = 
	  ## Contact information from the author, like email etc.
	  element contact {
		k.contact.attlist,
		text
	}
}

#==========================================
# common element <defaultbaseroot>
#
div {
	k.defaultbaseroot.attlist = empty
	k.defaultbaseroot =
	  ## FIXME: ??
	  element defaultbaseroot {
		  k.defaultbaseroot.attlist,
		  text
	}
}

#==========================================
# common element <defaultdestination>
#
div {
	k.defaultdestination.attlist = empty
	k.defaultdestination =
	  ## FIXME: ??
	  element defaultdestination {
		  k.defaultdestination.attlist,
		  text
	}
}

#==========================================
# common element <defaultroot>
#
div {
	k.defaultroot.attlist = empty
	k.defaultroot =
	  ## FIXME: ??
	  element defaultroot {
		  k.defaultroot.attlist,
		  text
	}
}

#==========================================
# common element <file>
#
div {
	k.file.name.attribute = k.name.attribute
	k.file.arch.attribute = k.arch.attribute
	k.file.attlist =
		k.file.name.attribute 
		&	k.file.arch.attribute?
	k.file =
	  ## A pointer to a file
	  element file {
		  k.file.attlist,
		  empty
	}
}

#==========================================
# common element <ignore>
#
div {
	k.ignore.name.attribute = k.name.attribute
	k.ignore.attlist = k.ignore.name.attribute
	k.ignore = 
	  ## Ignores a package
	  element ignore {
		  k.ignore.attlist,
		  empty
	}
}

#==========================================
# common element <initrd>
#
div {
	k.initrd.attlist = empty
	k.initrd =
	  ## FIXME: ??
	  element initrd {
		  k.initrd.attlist,
		  empty
	}
}

#==========================================
# common element <instrepo>
#
div {
	k.instrepo.name.attribute = k.name.attribute
	k.instrepo.priority.attribute =
	  ## FIXME: ??
	  attribute priority { text }
	k.instrepo.username.attribute = k.username.attribute
	k.instrepo.pwd.attribute = k.pwd.attribute
	k.instrepo.attlist =
		k.instrepo.name.attribute &
		k.instrepo.priority.attribute &
		k.instrepo.username.attribute &
		k.instrepo.pwd.attribute
	k.instrepo =
	  ## Name of an installation repository
	  element instrepo {
		  k.instrepo.attlist,
		  k.source
	}
}

#==========================================
# common element <kernel>
#
div {
	k.kernel.attlist = empty
	k.kernel =
	  ## FIXME: ??
	  element kernel {
		  k.kernel.attlist,
		  empty
	}
}

#==========================================
# common element <keytable>
#
div {
	k.keytable.attlist = empty
	k.keytable =
	  ## FIXME: ??
	  element keytable {
		  k.keytable.attlist,
		  text
	}
}

#==========================================
# common element <locale>
#
div { # locale
	k.locale.attlist = empty
	k.locale =
	  ## FIXME: ??
	  element locale {
		  k.locale.attlist,
		  text
	}
}

#==========================================
# common element <metadata>
#
div {
	k.metadata.attlist = empty
	k.metadata =
	  ## FIXME: ??
	  element metadata {
		  k.metadata.attlist,
		  k.package+,
		  k.metafile*
	}
}

#==========================================
# common element <metafile>
#
div {
	k.metafile.url.attribute = attribute url { text }
	k.metafile.script.attribute = k.script.attribute
	k.metafile.target.attribute = attribute target { text }
	k.metafile.attlist =
		k.metafile.url.attribute &
		k.metafile.script.attribute &
		k.metafile.target.attribute
	k.metafile =
	  ## FIXME: ??
	  element metafile {
  		k.metafile.attlist,
	  	empty
	}
}

#==========================================
# common element <opensusePattern>
#
div {
	k.opensusepattern.name.attribute = k.name.attribute
	k.opensusepattern.attlist = k.opensusepattern.name.attribute
	k.opensusepattern =
	  ## Name of a pattern from openSUSE
	  element opensusePattern {
		  k.opensusepattern.attlist,
		  empty
	}
}

#==========================================
# common element <package>
#
div {
	k.package.name.attribute = k.name.attribute
	k.package.arch.attribute = k.arch.attribute
	k.package.priority.attribute = attribute priority { text }
	k.package.addarch.attribute = attribute addarch { text }
	k.package.removearch.attribute = attribute removearch { text }
	k.package.source.attribute = k.source.attribute
	k.package.script.attribute = k.script.attribute
	k.package.attlist =
		k.package.name.attribute? 
		&	k.package.arch.attribute? 
		&	k.package.priority.attribute? 
		&	k.package.addarch.attribute? 
		&	k.package.removearch.attribute? 
		&	k.package.source.attribute? 
		&	k.package.script.attribute?
	k.package =
	  ## Name of a package
	  element package {
		  k.package.attlist,
	  	empty
	}
}

#==========================================
# common element <packagemanager>
#
div {
	k.packagemanager.attlist = empty
	k.packagemanager =
	  ## The package manager used for package installation 
	  element packagemanager {
		  k.packagemanager.attlist,
		  text # zypper or smart
	}
}

#==========================================
# common element <partitions>
#
div {
  k.partitions.device.attribute = attribute device { text }
  
	k.partitions.attlist = k.partitions.device.attribute?
	  
	k.partitions =
	  ## A list of partitions
	  element partitions { 
  		k.partitions.attlist, 
	  	k.partition*
	}
}

#==========================================
# common element <partition>
#
div {
	k.partition.type.attribute = k.type.attribute
	k.partition.number.attribute = attribute number { text }
	k.partition.size.attribute = k.size.attribute
	k.partition.mountpoint.attribute = attribute mountpoint { text }
	k.partition.target.attribute = attribute target { text }
	k.partition.attlist =
		k.partition.type.attribute?
		&	k.partition.number.attribute? 
		&	k.partition.size.attribute?
		&	k.partition.mountpoint.attribute?
		&	k.partition.target.attribute?
	k.partition =
	  ## A partition
	  element partition {
		  k.partition.attlist,
		  empty
	}
}

#==========================================
# common element <persistent>
#
div {
	k.persistent.attlist = empty
	k.persistent =
	  ## FIXME: ??
	  element persistent {
		  k.persistent.attlist ,
		  k.file*
	}
}

#==========================================
# common element <profile>
#
div {
	k.profile.name.attribute = k.name.attribute
	k.profile.description.attribute = attribute description { text }  
	k.profile.attlist =
		k.profile.name.attribute &
		k.profile.description.attribute
	k.profile =
	  ## FIXME: ??
	  element profile {
		  k.profile.attlist,
		  empty
	}
}

#==========================================
# common element <repository>
#
div {
	k.repository.type.attribute = k.type.attribute
	k.repository.status.attribute = attribute status { text }
	k.repository.attlist = k.repository.type.attribute 
		&	k.repository.status.attribute?
	k.repository =
	  ## The name of the repository
	  element repository {
		  k.repository.attlist,
		  k.source
	}
}

#==========================================
# common element <rpm-check-signatures>
#
div {
	k.rpm-check-signatures.attlist = empty
	k.rpm-check-signatures =
	  ## FIXME: ??
	  element rpm-check-signatures {
		  k.rpm-check-signatures.attlist,
		  text
	}
}

#==========================================
# common element <rpm-force>
#
div {
	k.rpm-force.attlist = empty
	k.rpm-force =
	  ## FIXME: ??
	  element rpm-force {
		  k.rpm-force.attlist,
		  text
	}
}

#==========================================
# common element <size>
#
div {
	k.size.unit.attribute = attribute unit { "M" | "G" } # was: text
	k.size.attlist = k.size.unit.attribute?
	k.size =
	  ## Specifies the size of an image in (M)egabyte or (G)igabyte
	  element size {
		  k.size.attlist,
		  text
	}
}

#==========================================
# common element <source>
#
div {
	k.source.path.attribute = k.path.attribute
	k.source.attlist = k.source.path.attribute
	k.source =
	  ## A pointer to a repository
	  element source {
		  k.source.attlist,
		  empty
	}
}

#==========================================
# common element <specification>
#
div {
	k.specification.attlist = empty
	k.specification =
	  ## FIXME: ??
	  element specification {
		  k.specification.attlist,
		  text
	}
}

#==========================================
# common element <temporary>
#
div {
	k.temporary.attlist = empty
	k.temporary =
	  ## FIXME: ??
	  element temporary {
		  k.temporary.attlist,
		  empty
	}
}

#==========================================
# common element <timeout>
#
div {
	k.timeout.attlist = empty
	k.timeout = 
	  ## FIXME: ??
	  element timeout {
		  k.timeout.attlist,
		  empty
	}
}

#==========================================
# common element <timezone>
#
div {
	k.timezone.attlist = empty
	k.timezone =  
	  ## FIXME: ??
	  element timezone {
		  k.timezone.attlist,
		  text
	}
}

#==========================================
# common element <type>
#
div {
	k.type.baseroot.attribute =
	  ## Specify the path to a pre created base root system.
	  attribute baseroot { text }
	k.type.bootprofile.attribute =
	  ## Specifies the boot profile. Used when KIWI option --add-profile
	  ## is used
	  attribute bootprofile { text }
	k.type.boot.attribute =
	  ## Specifies the path of the boot image (initrd), relative
	  ## to /usr/share/kiwi/image
	  attribute boot { text }
	k.type.checkprebuilt.attribute =
	  # FIXME: What means zero and what means one?
	  ## Specifies if KIWI should search for a prebuild boot image
	  attribute checkprebuilt { xsd:boolean }
	k.type.flags.attribute =
	  # FIXME: Should this be a list? compressed | iso
	  ## Specifies flags for the image type
	  attribute flags { text }
	k.type.filesystem.attribute = 
	  # FIXME: Should this attribute a list of possible/allowed
	  #        attributes?
	  ## Specifies the filesystem:
	  ## ext2 | ext3 | reiserfs | squashfs | cpio
	  attribute filesystem { text } 
	k.type.format.attribute =
	  ## FIXME: ??
	  attribute format { text }
	k.type.primary.attribute =
	  ## Specifies the primary type (choose KIWI option --type)
	  attribute primary { xsd:boolean }
	k.type.attlist = k.type.checkprebuilt.attribute?
	  &	k.type.bootprofile.attribute? 
	  &	k.type.boot.attribute?
	  &	k.type.flags.attribute? 
	  &	k.type.filesystem.attribute? 
	  &	k.type.baseroot.attribute?
	  &	k.type.format.attribute?
		& k.type.primary.attribute?
	k.type =
	  ## The image type of the logical extend.
	  element type { 
		  k.type.attlist, 
		  text 
	}
}

#==========================================
# common element <union>
#
div {
  k.union.ro.attribute =
    ## Device only for read-only 
    attribute ro { text }
  k.union.rw.attribute =
    ## Device for Read-Write
    attribute ro { text }
  k.union.type.attribute = k.type.attribute
	k.union.attlist = k.union.ro.attribute?
	  & k.union.rw.attribute?
	  & k.union.type.attribute?
	
	k.union =  
	  ## FIXME: ??
	  element union {
		  k.union.attlist,
		  empty
	}
}

#==========================================
# common element <user>
#
div {
	k.user.name.attribute = k.name.attribute
	k.user.realname.attribute =
	  ## The name of an user
	  attribute realname { text }
	k.user.pwd.attribute = k.pwd.attribute
	k.user.home.attribute =
	  ## The home directory for this user
	  attribute home { text }
	k.user.shell.attribute =
	  ## The shell for this user
	  attribute shell { text }
	k.user.attlist = k.user.name.attribute? 
	  & k.user.realname.attribute? 
	  & k.user.pwd.attribute?
	  & k.user.home.attribute? 
	  &	k.user.shell.attribute?
	k.user =
	  ## A user with name, password, path to its home and shell
	  element user {
		  k.user.attlist,
		  empty
	}
}

#==========================================
# common element <version>
#
div {
	k.version.attlist = empty
	k.version =
	  ## A version number for the image, consists of Major.Minor.Release 
	  element version {
		  k.version.attlist,
		  text
	}
}

#==========================================
# main block: <deploy>
#
div {
	k.deploy.server.attribute =
	  ## FIXME: ??
	  attribute server { text }
	k.deploy.blocksize.attribute = 
	  ## FIXME: ??
	  attribute blocksize { text }
	k.deploy.attlist =
		k.deploy.server.attribute &
		k.deploy.blocksize.attribute
	k.deploy =  
	  ## FIXME: ??
	  element deploy {
		  k.deploy.attlist,
		  k.timeout?,
		  k.commandline?,
		  k.kernel?,
		  k.initrd?,
		  k.partitions?,
		  k.union?,
		  k.configuration*
	}
}

#==========================================
# main block: <description>
#
div {
	k.description.type.attribute = 
	  ## FIXME: ?
	  attribute type {
  	  ## FIXME: ?
	    "boot" 
	    |
	    ## FIXME: ?
	    "system" }
	k.description.attlist = k.description.type.attribute
	k.description =  
	  ## A short description
	  element description {
		  k.description.attlist,
		  k.author,
		  k.contact+,
		  k.specification
	}
}

#==========================================
# main block: <drivers>
#
div {
	k.drivers.type.attribute = k.type.attribute
	k.drivers.profiles.attribute = k.profiles.attribute
	k.drivers.attlist = 
		k.drivers.type.attribute? &
		k.drivers.profiles.attribute?
		
	k.drivers =
	  ## A collection of driver files 
	  element drivers {
		  k.drivers.attlist,
		  k.file+
	}
}

#==========================================
# main block: <instsource>
#
div {
	k.instsource.arch.attribute = k.arch.attribute
	k.instsource.attlist = k.instsource.arch.attribute
	k.instsource =  
	  ## FIXME: ??
	  element instsource {
		  k.instsource.attlist,
		  k.instrepo+,
		  k.metadata,
		  k.packages
	}
}

#==========================================
# main block: <packages>
#
div {
	k.packages.type.attribute = k.type.attribute
	k.packages.memory.attribute = 
	  ## FIXME: ?
	  attribute memory { text }
	k.packages.disk.attribute = 
	  ## FIXME: ??
	  attribute disk { text }
	k.packages.profiles.attribute = 
	  ## FIXME: ??
	  attribute profiles { text }
	k.packages.patternType.attribute = 
	  ## FIXME: ??
	  attribute patternType { text }
	k.packages.patternPackageType.attribute = 
	  ## FIXME: ??
	  attribute patternPackageType { text }
	k.packages.attlist =
		k.packages.type.attribute? &
		k.packages.memory.attribute? &
		k.packages.disk.attribute? &
		k.packages.profiles.attribute? &
		k.packages.patternType.attribute? &
		k.packages.patternPackageType.attribute?
	k.packages =  
	  ## FIXME: ??
	  element packages {
		  k.packages.attlist,
		  k.package*,
		  k.opensusepattern*,
		  k.ignore*
	}
}

#==========================================
# main block: <bootstrap>
#
div {
	k.bootstrap.profiles.attribute = k.profile.attribute
	k.bootstrap.attlist = k.bootstrap.profiles.attribute
	k.bootstrap =
	  ## Packages that MUST available at boot time
	  element bootstrap {
		  k.bootstrap.attlist,
		  k.package*
	}
}

#==========================================
# main block: <preferences>
#
div {
	k.preferences.attlist = empty
	k.preferences =  
	  ## Configuration information needed for logical extend
	  element preferences {
	  	k.preferences.attlist,
		  k.type+,
		  k.version,
		  k.size?,
		  k.compressed?,
		  k.packagemanager?,
		  k.rpm-check-signatures?,
		  k.rpm-force?,
		  k.keytable?,
		  k.timezone?,
		  k.locale?,
		  k.defaultdestination?,
		  k.defaultroot?,
		  k.defaultbaseroot?
	}
}

#==========================================
# main block: <profiles>
#
div {
  k.profiles.attlist = empty
	k.profiles =  
	  ## FIXME: ??
	  element profiles {
	    k.profiles.attlist,
		  k.profile*
	}
}

#==========================================
# main block: <split>
#
div {
	k.split.attlist = empty
	k.split =  
	  ## FIXME: ??
	  element split {
		  k.split.attlist,
		  k.temporary?,
		  k.persistent?
	}
}

#==========================================
# main block: <users>
#
div {
	k.users.group.attribute =
	  ## Contains the group to which the user belongs
	  attribute group { text }
	k.users.attlist = k.users.group.attribute
	k.users = 
	  ## A list of users
	  element users {
		  k.users.attlist,
		  k.user+
	}
}


