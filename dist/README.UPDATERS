For Updaters to OBS 2.0 from OBS 1.7
====================================

NOTE: Do not update from the special MeeGo 1.8 release yet. You will miss
      features and run into database migration errors.
      You need to wait for OBS 2.1.

After running the package update to obs-* 2.0 packages you need to do the 
following steps manually:

1) Database migration

    # cd /srv/www/obs/api/
    # RAILS_ENV="production" rake db:setup
    # chown -R lighttpd.lighttpd log

    # cd /srv/www/obs/webui/
    # RAILS_ENV="production" rake db:setup
    # chown -R lighttpd.lighttpd log

2) Default distribution configuration
   The default targets are now defined in one place on the api.
   Create the default config via
 
    # cd /srv/www/obs/api/files/
    # cp distributions.xml.template distributions.xml

3) restart all services.
   easiest is maybe to restart your entire system.


For Updaters from OBS 1.6
=========================

1) Rename of frontend and webclient
   - The former called "frontend" has been renamed to "api"
   - The former called "webclient" has been renamed to "webui"

   Following this change quite a number of places have been adapated,
   for example the directory names below /src/www/obs. The packages shall
   convert this rename nicely.

   Your former used database config, most likely using "frontend_production"
   database is not touched by this, the server will still use this one.

2) Required rake migrate update

  When the obs-api package has been updated, it is required to upgrade
  the database. Therefore, you should do

    # cd /srv/www/obs/api/
    # RAILS_ENV="production" rake db:migrate

  and

    # cd /srv/www/obs/webui/
    # RAILS_ENV="production" rake db:migrate

3) Enable the new services

  In case you use the package signing, you need to run the new bs_signer 
  process. This has been split out of bs_repserver for better scalability.

    # insserv obssigner
    # rcobs_signer start

  You may want to run also the new bs_warden daemon, this monitors the 
  build hosts and restarts jobs, in case a build host is not responding
  correctly anymore:

    # insserv obswarden
    # rcobswarden start

  The experimental new obsserver daemon can optionally be started and be used
  for automatic file downloads (or own source services)

    # insserv obsservice
    # rcobsservice start

  To update api and webui informations, you need to start the following processes

    # insserv obsapidelayed
    # insserv obswebuidelayed
    # rcobsapidelayed start
    # rcobswebuidelayed start

  By default, you should *NOT* start the following services. These are intended
  to autoconfigure services on the OBS Appliance image based on existing LVM
  volumes and your local network setup. They will replace local configuration
  files on each boot.

    # obsstoragesetup
    # obsapisetup

For Updaters from OBS 0.9.x releases
====================================

1) Define download URL in rails config.

The new introduced "DOWNLOAD_URL" need to be defined in your settings
below /srv/www/obs/webui/config/environments/ directory. 
If you do not have a download server, simply define

DOWNLOAD_URL = nil

in your configuration.

2) Recommended rake migrate update

A rake migrate is recommended, but not neccessary. It would reimport 
buginfo flags from the backend to fix broken usage in api before.

When the obs-api package has been updated, it might be required to
upgrade the database. Therefore, you should do

    # cd /srv/www/obs/api/
    # RAILS_ENV="production" rake db:migrate

after updating obs-api.

Updater from before 0.9 release
===============================

Updaters of build server versions before 0.9 needs to rename their databases from
"development" to production. This can be performed by the following steps:

      # mysql -u root -p
      mysql> create database api_production;
      mysql> create database webui_production;
      mysql> quit
      # mysqldump -p api_development > DUMP
      # mysql -u root -p api_production < DUMP
      # mysqldump -p webui_development > DUMP
      # mysql -u root -p webui_production < DUMP

All Updaters needs to update their database schema in any case by running the
following commands:

      # cd /srv/www/obs/api/
      # RAILS_ENV="production" rake db:migrate


