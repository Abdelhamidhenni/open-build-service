For Updaters to OBS 1.7
=======================

1) Rename of frontend and webclient
   - The former called "frontend" has been renamed to "api"
   - The former called "webclient" has been renamed to "webui"

   Following this change quite a number of places have been adapated,
   for example the directory names below /src/www/obs. The packages shall
   convert this rename nicely.

   Your former used database config, most likely using "frontend_production"
   database is not touched by this, the server will still use this one.

2) Required rake migrate update

  When the obs-api package has been updated, it is required to upgrade
  the database. Therefore, you should do

    # cd /srv/www/obs/api/
    # RAILS_ENV="production" rake db:migrate

3) Enable the new backend services

  In case you use the package signing, you need to run the new bs_signer 
  process. This has been split out of bs_repserver for better scalability.

    # insserv obssigner
    # rcobs_signer start

  You may want to run also the new bs_warden daemon, this monitors the 
  build hosts and restarts jobs, in case a build host is not responding
  correctly anymore:

    # insserv obswarden
    # rcobswarden start


For Updaters from OBS 0.9.x releases
====================================

1) Define download URL in rails config.

The new introduced "DOWNLOAD_URL" need to be defined in your settings
below /srv/www/obs/webui/config/environments/ directory. 
If you do not have a download server, simply define

DOWNLOAD_URL = nil

in your configuration.

2) Recommended rake migrate update

A rake migrate is recommended, but not neccessary. It would reimport 
buginfo flags from the backend to fix broken usage in api before.

When the obs-api package has been updated, it might be required to
upgrade the database. Therefore, you should do

    # cd /srv/www/obs/api/
    # RAILS_ENV="production" rake db:migrate

after updating obs-api.

Updater from before 0.9 release
===============================

Updaters of build server versions before 0.9 needs to rename their databases from
"development" to production. This can be performed by the following steps:

      # mysql -u root -p
      mysql> create database api_production;
      mysql> create database webui_production;
      mysql> quit
      # mysqldump -p api_development > DUMP
      # mysql -u root -p api_production < DUMP
      # mysqldump -p webui_development > DUMP
      # mysql -u root -p webui_production < DUMP

All Updaters needs to update their database schema in any case by running the
following commands:

      # cd /srv/www/obs/api/
      # RAILS_ENV="production" rake db:migrate


