#! /bin/sh
# Copyright (c) 2007, Novell Inc.
#
# Author: adrian@suse.de
#
# /etc/init.d/obsrepserver
#   and its symbolic  link
# /usr/sbin/rcobsrepserver
#
### BEGIN INIT INFO
# Provides:          obsrepserver
# Required-Start:    $time $syslog $remote_fs
# Required-Stop:     $null
# Default-Start:     3 5
# Default-Stop:      0 1 2 4 6
# Description:       openSUSE build service repository server
### END INIT INFO

. /etc/rc.status

. /etc/sysconfig/obs-server

# Determine the base and follow a runlevel link name.
base=${0##*/}
link=${base#*[SK][0-9][0-9]}

if [ -z "$OBS_RUN_DIR" ]; then
        OBS_RUN_DIR="/srv/obs/run"
fi

if [ -z "$OBS_LOG_DIR" ]; then
        OBS_LOG_DIR="/srv/obs/log"
fi

obsdir=/usr/lib/obs/server/
rundir="$OBS_RUN_DIR"
logdir="$OBS_LOG_DIR"
FQHOSTNAME="`hostname`.`domainname`"

rc_reset
case "$1" in
	start)
		echo -n "Initializing obsrepserver"
		mkdir -p "$rundir" "$logdir"
		chown obsrun:obsrun "$logdir" "$rundir"
                # FIXME: not nice, this should receive a proper daemon handling, 
                #        including real logging, pid file and startproc
		startproc -l "$logdir"/rep_server.log "$obsdir"/bs_repserver
                if [ "$OBS_USE_SLP" == "yes" ]; then
                   slptool register service:obs.repo_server:http://$FQHOSTNAME:6262,en,6553
                fi
		rc_status -v
	;;
	stop)
		echo -n "Shutting down obsrepserver"
		killproc "$obsdir"/bs_repserver 
                if [ "$OBS_USE_SLP" == "yes" ]; then
                   slptool deregister service:obs.repo_server:http://$FQHOSTNAME:6262
                fi
		rc_status -v
	;;
	restart)
		## If first returns OK call the second, if first or
		## second command fails, set echo return value.
		$0 status
                if test $? = 0; then
			touch "$rundir"/bs_repserver.restart
		else
			$0 stop &&  $0 start
		fi
		rc_status
	;;
	try-restart)
		$0 status
		if test $? = 0; then
			$0 restart
		else
			rc_reset        # Not running is not a failure.
		fi
		# Remember status and be quiet
		rc_status
	;;
	reload)
		$0 status
                if test $? = 0; then
                        touch "$rundir"/bs_repserver.restart
		fi
		rc_status
	;;
	status)
		echo -n "Checking for obsrepserver: "
		checkproc "$obsdir"/bs_repserver
		rc_status -v
	;;
	*)
		echo "Usage: $0 {start|stop|status|try-restart|restart|reload}"
		exit 1
	;;
esac
rc_exit
