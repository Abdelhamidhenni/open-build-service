#
# Copyright (c) 2006, 2007 Michael Schroeder, Novell Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2 as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program (see the file COPYING); if not, write to the
# Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA
#
################################################################
#
# Build Service Configuration
#

package BSConfig;

use Net::Domain;

my $hostname = Net::Domain::hostfqdn() || 'localhost';

our $obsname = $hostname; # unique identifier for this Build Service instance
our $srcserver = "http://$hostname:6362";
our $reposerver = "http://$hostname:6262";

#our $gpg_standard_key = "/etc/obs-default-gpg.asc";
# public download service:
our $repodownload = "http://$hostname/repositories";
# optional notification service:
#our $hermesserver = "http://$hostname/hermes";
#our $hermesnamespace = "OBS";

# For the workers only, it is possible to define multiple repository servers here.
# But only one source server is possible yet.
our @reposervers = ("http://$hostname:6262");

# Package defaults
our $bsdir = '/srv/obs';
our $bsuser = 'obsrun';
our $bsgroup = 'obsrun';
#our $bsquotafile = '/srv/obs/quota.xml';

# To enable package downloading from backend on demand
# our $enable_download_on_demand = 1;

# Package rc script / backend communication + log files
our $rundir = '/srv/obs/run';
our $logdir = '/srv/obs/log';

# optional: limit visibility of projects for some architectures
#our $limit_projects = {
# "ppc" => [ "openSUSE:Factory", "FATE" ],
# "ppc64" => [ "openSUSE:Factory", "FATE" ],
#};

# optional: allow seperation of releasnumber syncing per architecture
# one counter pool for all ppc architectures and one for the rest in this example
#our %relsync_pool = (
# "ppc" => ".ppc",
# "ppc64" => ".ppc",
#);

# This is for prefer a project in scheduler, if it has high or medium
# prio events, but was not processed after $timeout minutes.
#our %max_project_timeout = (
# "openSUSE:Factory/standard" => { timeout => "30", last => "0" },
#);

# Build priority, dispatcher prefers or deprefers jobs according to this:
#our $dispatch_prio = [
# '!^home:resourcewaster',   # de-prefer jobs (take it only, when no other jobs)
# '^openSUSE:Factory',       # prefer (if there is a job for this project, take it)
#];

#No extra stage server sync
#our $stageserver = 'rsync://127.0.0.1/put-repos-main';
#our $stageserver_sync = 'rsync://127.0.0.1/trigger-repos-sync';

#No public download server
#our $repodownload = 'http://software.opensuse.org/download/repositories';

#No package signing server
#our $sign = '/usr/bin/sign';

# host specific configs
my $hostconfig = "bsconfig." . Net::Domain::hostname();
if(-r $hostconfig) {
  print "reading $hostconfig...\n";
  require $hostconfig;
}

1;
