<% @pagetitle = "Request ##{@id}" %>
<h3><%= @pagetitle %> (<%= @req.state.name %>)</h3>

<% if @superseded_by %>
  <p>This request has been superseded by request #<%= link_to @superseded_by, :id => @superseded_by %></p>
<% end %>

<div data-role="collapsible" data-collapsed="false">
  <h3>Actions</h3>

  <% @req.each_action do |ae| %>
    Type: <%= ae.data.attributes["type"] %> request <br/>
    <% if ae.has_element? :source %>
      Source:
      <% src_proj, src_pack = elide_two(ae.source.project, ae.source.package, 35) %>
      <%= link_to(src_proj, :controller => :project, :action => :show, :project => ae.source.project) %> /
      <% if package_exists?(ae.source.project, ae.source.package) %>
        <%= link_to(src_pack, :controller => :package, :action => :show, :project => ae.source.project, :package => ae.source.package) %>
      <% else %>
        <%= src_pack %>
      <% end %>
      <br/>
    <% end %>

    <% if ae.has_element?(:target) %>
      Target:
      <% if ae.target.has_attribute?(:package) and package_exists?(ae.target.project, ae.target.package) %>
        <% tgt_proj, tgt_pack = elide_two(ae.target.project, ae.target.package, 35) %>
        <%= link_to(tgt_proj, :controller => :project, :action => :show, :project => ae.target.project) %> /
        <%= link_to(tgt_pack, :controller => :package, :action => :show, :project => ae.target.project, :package => ae.target.package) %>
      <% else %>
        <%= link_to(elide(ae.target.project, 35), :controller => :project, :action => :show, :project => ae.target.project) %>
      <% end %>
    <% end %>


  <% end %>
</div>



<% unless @req.value('description').blank? %>
  <div data-role="collapsible" data-collapsed="true">
    <h3>Comment</h3>
    <p><%= format_comment(@req.value('description')) %></p>
  </div>
<% end %>


<div data-role="collapsible" data-collapsed="true">
  <h3>History</h3>
  <% @req.history.each do |h| %>
    <%= fuzzy_time_string(Time.at(h[:when]).to_s) %>:
    -> <b><%= h[:name] %></b> changed by <%= h[:who] %>
    <% if h.has_key?(:comment) and not h[:comment].nil? %>
      <p><%= h[:comment] %></p>
    <% end %>
  <% end %>
</div>



<% if @diff_text and not @diff_text.empty? %>
  <div data-role="collapsible" data-collapsed="true">
    <h3>Diff</h3>
    <%= render :partial => "shared/syntaxhighlighter", :locals => {:code => @diff_text, :type => 'diff'} %>
  </div>
<% end %>
