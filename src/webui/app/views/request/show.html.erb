<% @pagetitle = "Request ##{@id}" %>
<% @crumb_list = [link_to('Requests', :controller => :home, :action => :list_requests), @pagetitle] %>

<% content_for :content_for_head do %>
  <%= javascript_include_tag 'jquery.autocomplete.pack' %>
  <%= javascript_include_tag 'jquery.tablesorter.js' %>
  <%= javascript_include_tag 'jquery.tooltip.min'  %>
  <%= stylesheet_link_tag 'jquery.autocomplete' %>
  <%= stylesheet_link_tag "jquery.tooltip" %>
<% end %>

<h3><%= @pagetitle %> (<%= @req.state.name %>)</h3>

<% if @superseded_by %>
  <p>This request has been superseded by request #<%= link_to @superseded_by, :id => @superseded_by %></p>
<% end %>

<div>
  <h3>Actions</h3>
  <table id="actions_table" class="tablesorter" style="width: 95%">
    <thead>
      <tr>
        <th>Type</th>
        <th>Source</th>
        <th>Target</th>
        <th>Info</th>
      </tr>
    </thead>
    <tbody>
      <% @req.each_action do |ae| %>
        <tr>
          <td><%= ae.data.attributes["type"] %></td>
          <td>
            <% if ae.has_element? :source %> <!-- <%= ae.source.project %> -->
              <% if ae.source.has_attribute? :package %> <!-- <%= ae.source.package %> -->
                <% src_proj, src_pack = elide_two(ae.source.project, ae.source.package, 64) %>
                <%= link_to(src_proj, :controller => :project, :action => :show, :project => ae.source.project) %> /
                <% if package_exists?(ae.source.project, ae.source.package) %>
                  <%= link_to(src_pack, :controller => :package, :action => :show, :project => ae.source.project, :package => ae.source.package) %>
                <% else %>
                  <%= src_pack %>
                <% end %>
              <% else %>
                <%= link_to(elide(ae.source.project, 64), :controller => :project, :action => :show, :project => ae.source.project) %>
              <% end %>
            <% end %>
          </td>
          <td>
          <% if ae.has_element?(:target) %>
            <% if not @project or @project.name != ae.target.project %> <!-- <%= ae.target.project %> -->
              <% if ae.target.has_attribute?(:package) and package_exists?(ae.target.project, ae.target.package) %> <!-- /<%= ae.target.package %> -->
                <% tgt_proj, tgt_pack = elide_two(ae.target.project, ae.target.package, 64) %>
                <%= link_to(tgt_proj, :controller => :project, :action => :show, :project => ae.target.project) %> /
                <%= link_to(tgt_pack, :controller => :package, :action => :show, :project => ae.target.project, :package => ae.target.package) %>
              <% else %>
                <%= link_to(elide(ae.target.project, 64), :controller => :project, :action => :show, :project => ae.target.project) %>
              <% end %>
            <% else %>
              <% if ae.target.has_attribute?(:package) and package_exists?(@project.name, ae.target.package) %> <!-- <%= ae.target.package %> -->
                <%= link_to(elide(ae.target.package, 64), :controller => :package, :action => :show, :project => ae.target.project, :package => ae.target.package) %>
              <% elsif ae.data.attributes[:type] == "delete" %>
                This project
              <% end %>
            <% end %>
          <% end %>
          </td>
          <td>
            <% if ae.data.attributes["type"] == "add_role" %>
              <% if ae.has_element? :group %>
                Role <b><%= ae.group.role %></b> for group <b><%= ae.group.name %></b>
              <% elsif ae.has_element? :person %>
                Role <b><%= ae.person.role %></b> for user <b><%= ae.person.name %></b>
              <% end %>
            <% elsif ae.has_element? :source and ae.source.has_attribute? :package %>
              <%= link_to(image_tag('icons/information.png', :size => '16x16', :alt => 'Build Results', :id => "req_#{@req.value(:id)}"), :controller => :package, :action => :show, :project => ae.source.project, :package => ae.source.package) %>
              <script type="text/javascript">
                setup_buildresult_tooltip( <%= @req.value(:id) %>, '<%= url_for :controller => :project, :action => :package_buildresult, :project => ae.source.project, :package => ae.source.package %>' )
              </script>
            <% end %>
          </td>
        </tr>
      <% end %>
    </tbody>
  </table>
  <script type="text/javascript">
    $('#actions_table').tablesorter({widgets: ['zebra'], sortList: [[0,1]], headers: {3: {sorter: false}}});
  </script>
</div>
<p><%= format_comment(@req.value(:description)) %></p>

<div>
  <h3>History</h3>
  <table id="history_table" class="tablesorter" style="width: 95%">
    <thead>
      <tr>
        <th>Date</th>
        <th>State</th>
        <th>User</th>
        <th style="width: 70%">Comment</th>
      </tr>
    </thead>
    <tbody>
      <% @req.history.each do |h| %>
        <tr>
          <td class="nowrap"><%= fuzzy_time_string(Time.at(h[:when]).to_s) %></td>
          <td><%= h[:name] %></td>
          <td class="nowrap"><%= render :partial => 'shared/user_with_realname_and_gravatar', :locals => {:user => h[:who]}%></td>
          <td><%= raw escape_and_transform_nonprintables(h[:comment]) if h.has_key?(:comment) and not h[:comment].nil? %></td>
        </tr>
      <% end %>
    </tbody>
  </table>
  <script type="text/javascript">
    $('#history_table').tablesorter({widgets: ['zebra'], sortList: [[0,1]], headers: {3: {sorter: false}}});
  </script>
</div>

<% if !["accepted", "declined", "revoked", "superseded"].include?(@state) %>
  <% if (@is_maintainer || @is_reviewer || @is_author) %>
    <% content_for :head_javascript do %>
      function modifyReview(id, new_state) {
        var comment = $('#review_comment_' + id).attr('value');
        var path = "/request/modify_review/<%= @id %>?new_state=" + encodeURIComponent(new_state) + "&comment=" + encodeURIComponent(comment);
        if ($('#review_type_' + id).text() == "package") {
          project_and_package = $('#review_name_' + id).text().split(' / ');
          path += "&project=" + encodeURIComponent(project_and_package[0].trim());
          path += "&package=" + encodeURIComponent(project_and_package[1].trim());
        } else {
          path += "&" + $('#review_type_' + id).text() + "=" + encodeURIComponent($('#review_name_' + id).text());
        }
        $.ajax({type: "POST", url: path,
          success: function(data) {
            $('#review_table td#review_state_' + id).text(data);
            $('#review_table td#review_buttons_' + id).text("");
            $('#review_table td #review_comment_' + id).parent().html(comment);
          }
        })
      }
    <% end %>
    <% if @req.each_review.length > 0 %>
      <div>
        <h3>Reviews</h3>
        <table id="review_table" class="tablesorter" style="width: 95%">
          <tr>
            <th style="width: 1%">State</th>
            <th style="width: 1%">Type</th>
            <th style="width: 8%">Reviewer</th>
            <th style="width: 89%">Reviewer Comment</th>
            <th style="width: 1%">Actions</th>
          </tr>
          <% @req.each_review do |r| %>
            <%- comment = r.comment if r.has_element? :comment or nil%>
            <tr>
              <td id="review_state_<%= r.id %>" class="nowrap"><%= r.state %></td>
              <% if r.has_attribute? :by_user %>
                <td id="review_type_<%= r.id %>">user</td>
                <td id="review_name_<%= r.id %>" class="nowrap"><%= render :partial => 'shared/user_with_realname_and_gravatar', :locals => {:user => r.by_user}%></td>
              <% elsif r.has_attribute? :by_group %>
                <td id="review_type_<%= r.id %>">group</td>
                <td id="review_name_<%= r.id %>"><%= r.by_group %></td>
              <% elsif r.has_attribute? :by_project %>
                <% if r.has_attribute? :by_package %>
                  <td id="review_type_<%= r.id %>">package</td>
                  <td id="review_name_<%= r.id %>" class ="nowrap">
                    <%= link_to(r.by_project.to_s + ' / ' + r.by_package.to_s, :controller => :package, :action => :show, :project => r.by_project, :package => r.by_package) %>
                  </td>
                <% else %>
                  <td id="review_type_<%= r.id %>">project</td>
                  <td id="review_name_<%= r.id %>"><%= link_to(r.by_project, :controller => :project, :action => :show, :project => r.by_project) %></td>
                <% end %>
              <% end %>

              <% if @is_reviewer and @req.state.name == "review" and r.state.to_s == "new" and
                    ((r.has_attribute? :by_user and @user.login.to_s == r.by_user.to_s) or
                     (r.has_attribute? :by_group and @user.is_in_group?(r.by_group)) or
                     (r.has_attribute? :by_project and @user.is_maintainer?(r.by_project)) or
                     (r.has_attribute? :by_package and @user.is_maintainer?(r.by_project, r.by_package))) %>
                <td><%= text_field_tag "review_comment_#{r.id}", comment, :style => "width: 99%" %></td>
                <td id="review_buttons_<%= r.id %>">
                  <%= link_to_function(image_tag("icons/accept.png"), :onclick => "modifyReview(#{r.id}, 'accepted')") %>
                  <%= link_to_function(image_tag("icons/cancel.png"), :onclick => "modifyReview(#{r.id}, 'declined')") %>
                </td>
              <% else %>
                <td><%= format_comment(comment) %></td>
                <td></td>
              <% end %>
            </tr>
          <%end%>
        </table>
        <script type="text/javascript">
          $('#review_table').tablesorter({widgets: ['zebra'], sortList: [[0,1]], headers: {3: {sorter: false}, 4: {sorter: false}}});
        </script>
      </div>
    <% end %>
  <% end %>
  <% if @is_maintainer || @is_author %>
    <% if (@req.state.name == "review" || @req.state.name == "new") && !@diff_error %>
      <p>
        <%= link_to_remote(image_tag('icons/user_add.png', :title => "Add reviewer"), :url => {:controller => :request, :action => :add_reviewer_dialog, :id => @id}) %>
        <%= link_to_remote("Add reviewer", :url => {:controller => :request, :action => :add_reviewer_dialog, :id => @id}) %>
      </p>
    <% end %>
    <% form_tag(:action => "changerequest") do %>
      <h3>Handle Request</h3>
      <p>
        <% if @is_maintainer %>
          <%= check_box_tag(:add_submitter_as_maintainer) %> Add
          <%= render :partial => 'shared/user_with_realname_and_gravatar', :locals => {:user => BsRequest.creator(@req), :no_gravatar => true} %> as maintainer of the target package<br/>
        <% end %>
        <b>Comment:</b><br/>
        <%= text_field_tag(:reason, '', :style => "width: 99%") %>
      </p>
      <p>
        <%= hidden_field_tag("id", @id) %>
        <% if @is_maintainer %>
          <% linked = @target_pkg.linked_to if @target_pkg -%>
          <% if !@diff_error -%>
            <% if linked and not linked.empty? and @req.action.data["type"] == "submit" -%>
              <%= hidden_field_tag("forward_project", linked[0]) %>
              <%= hidden_field_tag("forward_package", linked[1]) %>
              <%= submit_tag "Forward to %s" % linked, :name => 'forward' %>
            <% end -%>
            <% if @req.state.name.to_s == "review" %>
              <%= submit_tag "Accept request", :name => 'accepted', :confirm => "Do you really want to approve this request, despite of open review requests ?" %>
            <% else %>
              <%= submit_tag "Accept request", :name => 'accepted' %>
            <% end %>
          <% end %>
          <%= submit_tag "Decline request", :name => 'declined' %>
        <% elsif @is_author %>
          <%= submit_tag "Revoke request", :name => 'revoked' %>
        <% end %>
      </p>
    <% end %>
  <% end %>
<% end %>

<% if @diff_error %>
  <h3>Diff Error</h3>
  <p><%= @diff_error %></p>
<% elsif @diff_text and not @diff_text.empty? %>
  <h3>Diff</h3>
  <%= render :partial => "shared/syntaxhighlighter", :locals => {:code => @diff_text, :type => 'diff'} %>
<% end %>
