<% @pagetitle = "New Link" %>
<% project_bread_crumb('Add Package Link') -%>

<% content_for :content_for_head do %>
  <%= javascript_include_tag 'jquery.autocomplete.pack' %>
  <%= stylesheet_link_tag 'jquery.autocomplete' %>
<% end %>

<% content_for :ready_function do %>
  $("#linked_project").autocomplete('<%= url_for :controller => :project, :action => :autocomplete_projects %>',
    { minChars: 2, matchCase: true, max: 50 } );

  $("#linked_package").autocomplete('<%= url_for :controller => :project, :action => :autocomplete_packages %>', {
    matchCase: true, max: 50,
    extraParams: {
       project: function() { return $("#linked_project").val(); }
    }
  });
<% end -%>

<h2>New Package Link in Project <%= @project.name %></h2>

<p>By linking a package from another project you add the package and its files
to your project in a transparent way. Changes of the files in the original
project will also change the files in the linked package in your project.</p>
<p>You can add patches to the linked package without affecting the original
package.</p>

<% form_tag :action => "save_new_link" do %>
<p>
<strong>Name of original project:</strong><br/>
<%= text_field_tag 'linked_project', @linked_project, :size => 80, :id => 'linked_project' %>
</p>
<p>
<strong>Name of package in original project:</strong><br/>
<%= text_field_tag 'linked_package', @linked_package, :size => 80, :id => 'linked_package' %>
</p>
<p>
<strong>Name of linked package in target project:</strong> (Leave blank to use the
same name as in the original project) <br/>
<%= text_field_tag 'target_package', @target_package, :size => 80 %><br/>
</p>
<p>
<%= submit_tag "Create Link" %>
<%= hidden_field_tag 'project', @project.name %>
</p>
<% end %>



