if @error.nil?
  update = Array.new
  @project.send("#{@flag.name}"+"flags").keys.each do |key|
    key_parts = key.to_s.split("::")
    #all flags has to be updated (by type)
    update << key.to_s if @flag.repository.nil? and @flag.architecture.nil?
    #only flags of the given repo have to be updated
    update << key.to_s if key_parts[1] == @flag.architecture
    #only flags of the specified arch have to be updated
    update << key.to_s if key_parts[0] == @flag.repository
  end
  
  #first update the altered flag
  htmlid = "#%s_%s" % [@flag.name, @flag.id.gsub(/[:.+&]/, "_")]
  page.replace_html htmlid, :partial => "flag_status",  :locals => {:flag => @project.send("#{@flag.name}"+"flags")[@flag.id.to_sym]}
  
  #updates each flag on the web site, that is affected from the changed flag.
  update.each do |id|
    htmlid = "#%s_%s" % [@flag.name, id.gsub(/[:.]/, "_")]
    page.replace_html htmlid, :partial => "flag_status",  :locals => {:flag => @project.send("#{@flag.name}"+"flags")[id.to_sym]}
  end
  
else
  page.replace_html 'error_message_flags', "ERROR #{@error}"
  page.show 'error_message_flags'
  page.delay(10) do
    page.hide 'error_message_flags'
  end
end
