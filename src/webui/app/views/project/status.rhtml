<% @pagetitle = "Status #{@project}" %>
<%
@crumb_list = [
  link_to( 'Projects', :action => :list_public),
  link_to( @project, :action => :show, :project => @project),
  'Status'
]
-%>

<% content_for :content_for_head do %>
  <%= javascript_include_tag 'jquery.tablesorter.js' %>
  <%= stylesheet_link_tag "local/attribute.css" %>
<% end %>

<% content_for :ready_function do %>
  // call the tablesorter plugin
  $("table").tablesorter()({
        // sort on the first column and third column, order asc
        sortList: [[0,0]]
  });
<% end %>

<%= render :partial => "tabs" %>

<h2>Status of project <%=h @project %></h2>

<% comments_to_clear = [] %>

<% form_tag({ :action => :status }, :method => :get) do %>
  <div>
    <p>
      <%= hidden_field_tag 'project', @project -%>
      <% if @develprojects.size > 2 %>
        Devel project: <%= select_tag("filter_devel", options_for_select(@develprojects, @current_develproject)) %>
      <% end %>
    </p>
    <p>
      <%= check_box_tag("ignore_pending", true, @ignore_pending) %>
      <%= label_tag 'ignore_pending', 'Ignore packages with pending requests to %s' % @project %>
    </p>
    <p>
      <%= hidden_field_tag('limit_to_fails', 'false') %>
      <%= check_box_tag("limit_to_fails", true, @limit_to_fails) %>
      <%= label_tag 'limit_to_fails', 'Limit to currently failing packages' %>
    </p>
    <p>
      <%= hidden_field_tag('include_versions', 'false') %>
      <%= check_box_tag("include_versions", true, @include_versions) %>
      <%= label_tag 'include_versions', 'Include Version Updates' %>
    </p>
    <p>
      <%= submit_tag 'Filter results' %>
    </p>
  </div>
<% end %>

<% if !@packages.blank? %>

  <p>Displaying <%= @packages.size %> packages that need handling, including:
    <%= @packages.select {|p| p['firstfail'] and p['firstfail'] > 0}.length %> not building,
    <%= @packages.select {|p| !p['problems'].empty?}.length %> with a diff in the devel project,
    <%= @packages.select {|p| !p['requests_to'].empty? || !p['requests_from'].empty?}.length %> with a pending request.
  </p>

  <table class='tablesorter' cellspacing='1'>
    <thead>
      <tr>
        <th>Name</th>
        <th class="nowrap">Devel Project</th>
        <th width="99%">Summary</th>
      </tr>
    </thead>
    <tbody>
      <% i = 0 %>
      <% @packages.each do |p| %>
        <%-
        outs = []
        icon = "ok"
        if p['requests_from'].empty?
          descr = nil
          if p['problems'].include? 'different_changes'
            descr = "Different changes in devel project"
          elsif p['problems'].include? 'different_sources'
            descr = "Different sources in devel project"
          else
            descr = p['problems'].join(',')
          end
          unless descr.blank?
            outs << link_to(descr, :controller => :package, :project => p['develproject'], :package => p['develpackage'],
              :action => :rdiff, :oproject => @project, :opackage => p['name'])
            icon = "changes"
          end
        end
        p['requests_to'].each do |id|
          outs << "Request %s to %s" % [link_to(id, :controller => :request, :action => :diff, :id => id), p['develproject']]
          icon = "changes1"
        end
        p['requests_from'].each do |id|
          outs << "Request %s to %s" % [link_to(id, :controller => :request, :action => :diff, :id => id), @project]
          icon = "changes2"
        end
        if p['upstream_version']
          if p['upstream_url']
            outs << "New upstream version <a href=\"" + p['upstream_url'] + "\">" + p['upstream_version'] + "</a> available"
          else
            outs << "New upstream version " + p['upstream_version'] + " available"
          end
        end
        if p['firstfail']
          outs.unshift(link_to("Fails", :title => p['name'], :controller => :package,
              :action => :live_build_log, :arch => p['failedarch'], :repository => p['failedrepo'], :project => @project, :package => p['name']) +
              " for #{Integer(Time.now.to_i - p['firstfail']) / 3600 / 24} days:" +
              " <span id='comment_" + p['name'].gsub(':', '-') + "'>" +
              show_status_comment( p['failedcomment'], p['name'], p['firstfail'], comments_to_clear ) + '</span>')
          icon = "error"
        else
          outs << "<span id='comment_" + p['name'].gsub(':', '-') + "'>" +
                show_status_comment( p['failedcomment'], p['name'], p['firstfail'], comments_to_clear ) + '</span>'
        end
        -%>
        <tr class='<% if i%2 == 0 %>alternate1<% else %>alternate2<% end %>' valign='top'>
          <% i += 1 %>
          <% shortname = p['name']
          if shortname.length > 19
            shortname = shortname[0..17] + "..."
          end -%>
          <td class="nowrap">
            <% if icon == "error"  -%>
              <%= image_tag("silk/icons/exclamation.png", :size => "16x16", :title => "Error" ) %>
            <% elsif icon == "ok" -%>
              <%= image_tag("silk/icons/accept.png", :size => "16x16", :title => "Ok" ) %>
            <% else -%>
              <%= image_tag("silk/icons/information.png", :size => "16x16", :title => "So-so" ) %>
            <% end -%>
            <%= link_to shortname, :controller => :package, :action => :show, :project => @project, :package => p['name'] %>
          </td>
          <td><%= if p['develproject'] then link_to p['develproject'], :controller => :package, :action => :show, :project => p['develproject'], :package => p['name'] end %></td>
          <td><!-- <%= p['firstfail'] %> --><%= outs.join('<br/>') -%></td>
        </tr>
      <% end %>
    </tbody>
  </table>

<% end %>

<%= if @project.is_maintainer?( session[:login] ) and not comments_to_clear.empty? 
  link_to('Clear all comments of not failing packages (%s)' % comments_to_clear.join(','), :action => :clear_failed_comment, :project => @project, "package" => comments_to_clear)
end -%>
