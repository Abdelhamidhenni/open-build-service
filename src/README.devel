

  Setting up a development environment
--------------------------------
To install ruby-on-rails, please install the rubygems package and 
run: "gem install -y rails" to install the rails libs on your system. 

The frontend uses a MySQl backend. Please add the database 
"frontend_development" with the scheme from frontend/db/create_mysql.sql
The database credentials can be set in frontend/config/database.yml 
To run the frontends test framework, please add an empty database "frontend_test".

A default user named 'Admin' is created with password 'opensuse'.

There are 2 scripts in trunk/buildservice/src named 'start' and
'debug'. They need one parameter, which is one of (back|back_test|front|web).
'start' starts a WEBrick server, 'debug' starts the debugger
for the selected buildservice component. The scripts are there so
the lazy developers don't have to remember the correct ports for
server and debugger.


  Generating the frontends API documentation
--------------------
To generate the docu you need the ruby builder lib. 
It can be installed with: "gem install builder"
The docu then can be generated with the command:
  docs/architecture/rest_doc --html api.txt



  Using the debugger
--------------------

The debugger waits for connections from the corresponding application.
Such a connection is established as soon as the method 'breakpoint' is
called from within the application. The breakpoint method suspends
application flow and transfers control to the debugger, which opens
an irb shell in the context of the breakpoint call. For more information
on the debugger, see

http://api.rubyonrails.com/classes/Breakpoint.html#M000833



  Deployment
------------

Deploy locations (SUSE specific):

The deploy path is referred to as $DEPLOY_LOCATION in the later sections.

- backend


- backend-dummy

  server: buildservice.suse.de
  path: /srv/www/opensuse/backend-dummy/


- frontend

  server: buildservice.suse.de (internal), api.opensuse.org (external)
  path: /srv/www/opensuse/frontend/


- webclient

  server: buildservice.suse.de (internal), build.opensuse.org (external)
  path: /srv/www/opensuse/webclient/



Prerequisites:

The buildservice uses Switchtower (http://manuals.rubyonrails.com/read/book/17)
for deployment. Before using the deploy scripts, the switchtower gem has to be
installed:

%> gem install switchtower


Customizing your configuration

Switchtower deployment is available for webclient, frontend (API) and common libs.
In each of the root directories of these parts (below trunk/buildservice/src), there
is a file config/deploy.rb.template. Change the values in these files to match your
setup (SUSE developers: use the deploy.rb scripts from internal svn).



Preparing a setup for the first deploy:

In the three directories trunk/buildservice/src/(frontend|webclient|current), call:

%> rake remote_exec ACTION=setup



Deploying:

Call rake deploy in the RAILS_ROOT directory of the part you want to deploy. If your
forge username is different from the username on your workstation, set the
environment BS_SVN_USER to your forge username.

Example:
Deploy the webclient using forge user 'lieschenmueller':

%> cd trunk/buildservice/src/webclient
%> rake deploy BS_SVN_USER=lieschenmueller

If the database schema has changed, ssh to the server running the API database
after the deploy and update it manually. The update script is located in 
$DEPLOY_LOCATION/current/db/ on the server.

Warning:
The current schema is autogenerated for use with the development database
and contains some statements with hardcoded database names. Remember to change
the names to the production database before applying the new schema on a production
system.

After the database is updated, restart the FastCGI processes:

%> cd $DEPLOY_LOCATION
%> script/process/reaper -d /srv/www/opensuse/frontend/current/public/dispatch.fcgi

